import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c,a as n,b as s,d as t,e}from"./app-DdSNBsy6.js";const l={},u={id:"prometheus",tabindex:"-1"},r={class:"header-anchor",href:"#prometheus"},d={href:"https://prometheus.io",target:"_blank",rel:"noopener noreferrer"},k=n("figure",null,[n("img",{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gsffp140x9j311j0mjjtq.jpg",alt:"architecture",tabindex:"0",loading:"lazy"}),n("figcaption",null,"architecture")],-1),m={id:"metric-types",tabindex:"-1"},v={class:"header-anchor",href:"#metric-types"},g={href:"https://prometheus.io/docs/concepts/metric_types/",target:"_blank",rel:"noopener noreferrer"},h=n("em",null,"四种监控指标",-1),b={href:"https://blog.csdn.net/liangcha007/article/details/86699013?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.base&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-2.base",target:"_blank",rel:"noopener noreferrer"},f=e(`<h2 id="counter" tabindex="-1"><a class="header-anchor" href="#counter"><span>Counter</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>prometheus<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">Counter</span></span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">YourClass</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Counter</span> requests <span class="token operator">=</span> <span class="token class-name">Counter</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;requests_total&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string">&quot;Total requests.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">void</span> <span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    requests<span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Your code here.</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gauge" tabindex="-1"><a class="header-anchor" href="#gauge"><span>Gauge</span></a></h2><p>计量器，可增可减，可升可降。</p><p>一般用于：</p><ul><li>监测并发请求数量</li><li>监测CPU使用率</li><li>监测JVM线程数量等</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">YourClass</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Gauge</span> inprogressRequests <span class="token operator">=</span> <span class="token class-name">Gauge</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;inprogress_requests&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string">&quot;Inprogress requests.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">void</span> <span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    inprogressRequests<span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Your code here.</span>
    inprogressRequests<span class="token punctuation">.</span><span class="token function">dec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">YourClass</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Summary</span> receivedBytes <span class="token operator">=</span> <span class="token class-name">Summary</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;requests_size_bytes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string">&quot;Request size in bytes.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Summary</span> requestLatency <span class="token operator">=</span> <span class="token class-name">Summary</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;requests_latency_seconds&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string">&quot;Request latency in seconds.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">void</span> <span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">Request</span> req<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Summary<span class="token punctuation">.</span>Timer</span> requestTimer <span class="token operator">=</span> requestLatency<span class="token punctuation">.</span><span class="token function">startTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// Your code here.</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      receivedBytes<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      requestTimer<span class="token punctuation">.</span><span class="token function">observeDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="histogram" tabindex="-1"><a class="header-anchor" href="#histogram"><span>Histogram</span></a></h2><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">YourClass</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Histogram</span> requestLatency <span class="token operator">=</span> <span class="token class-name">Histogram</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;requests_latency_seconds&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">help</span><span class="token punctuation">(</span><span class="token string">&quot;Request latency in seconds.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">void</span> <span class="token function">processRequest</span><span class="token punctuation">(</span><span class="token class-name">Request</span> req<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Histogram<span class="token punctuation">.</span>Timer</span> requestTimer <span class="token operator">=</span> requestLatency<span class="token punctuation">.</span><span class="token function">startTimer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// Your code here.</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      requestTimer<span class="token punctuation">.</span><span class="token function">observeDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),y={id:"命名规范",tabindex:"-1"},_={class:"header-anchor",href:"#命名规范"},q={href:"https://prometheus.io/docs/practices/naming/",target:"_blank",rel:"noopener noreferrer"},x=n("h1",{id:"网络",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#网络"},[n("span",null,"网络")])],-1),j=n("figure",null,[n("img",{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gsffldhokij316006ugno.jpg",alt:"image-20210713170454537",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20210713170454537")],-1),w={href:"https://github.com/prometheus-community/PushProx",target:"_blank",rel:"noopener noreferrer"},C=e(`<h1 id="网阔监控" tabindex="-1"><a class="header-anchor" href="#网阔监控"><span>网阔监控</span></a></h1><h2 id="基础信息" tabindex="-1"><a class="header-anchor" href="#基础信息"><span>基础信息</span></a></h2><p>开发环境api地址： prometheus：http://10.50.125.141:9090 aletmanager：http://10.50.125.141:9093</p><h2 id="系统结构" tabindex="-1"><a class="header-anchor" href="#系统结构"><span>系统结构</span></a></h2><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>原始数据
	原始数据查询
	
报警管理
	规则模板（低优先级）
	规则管理
	报警记录

推送管理
	全局配置
	接收人
	路由规则（主规则、分支规则）
	消息模板
	静默配置

监控中心：
	监控模板
	数据监控快照

系统设置：
	项目管理
	操作日志（低优先级）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="核心技术" tabindex="-1"><a class="header-anchor" href="#核心技术"><span>核心技术</span></a></h2><p>promethues相关知识与配置、aletmanager配置及原理。</p><blockquote><p>vcolco-lookout 现阶段</p></blockquote><figure><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gswmuvdxefj31c60s2juh.jpg" alt="image-20210728141052416" tabindex="0" loading="lazy"><figcaption>image-20210728141052416</figcaption></figure><h2 id="待监控" tabindex="-1"><a class="header-anchor" href="#待监控"><span>待监控</span></a></h2><p><strong>JVM监控</strong></p><blockquote><p>为什么要监控JVM？</p><ul><li>为排查问题提供科学可靠的线索</li><li>结合jvm监控数据可以对应用程序功能及性能进行一定程度的优化</li></ul><p>GC的次数，一次GC所需要的时间 GC各个时代的数据 进程占用的CPU 进程占用的内存 堆内存 线程数 类加载情况 业务名</p></blockquote><p><strong>监控JVM线程</strong></p><table><thead><tr><th style="text-align:left;">JVM线程</th><th>是否监控</th></tr></thead><tbody><tr><td style="text-align:left;">当前的活动线程数（包括：守护线程、用户线程）</td><td>是</td></tr><tr><td style="text-align:left;">当前的守护线程活动线程数</td><td>是</td></tr><tr><td style="text-align:left;">JVM启动以来的线程数量</td><td>是</td></tr><tr><td style="text-align:left;">当前处于就绪状态的线程数</td><td>是</td></tr><tr><td style="text-align:left;">当前处于运行状态的线程数量</td><td>是</td></tr><tr><td style="text-align:left;">当前处于阻塞状态的线程数量</td><td>是</td></tr><tr><td style="text-align:left;">当前处于等待状态的线程数量</td><td>是</td></tr><tr><td style="text-align:left;">当前已执行完的线程的数量</td><td>是</td></tr><tr><td style="text-align:left;"></td><td></td></tr></tbody></table><p><b style="color:red;">为什么要监控JVM的线程？</b></p><p><strong>监控JVM GC</strong></p><p><strong>监控JVM 堆</strong></p><p><strong>HTTP连接数</strong></p><p><strong>Redis健康检查</strong></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>MySQL健康检查</strong></p><p><strong>MongoDB健康检查</strong></p><p><strong>InfluxDB健康检查</strong></p><p><strong>Kafka健康检查</strong></p><p><strong>RabbitMq健康检查</strong></p>`,25);function P(B,M){const a=o("ExternalLinkIcon");return i(),c("div",null,[n("h1",u,[n("a",r,[n("span",null,[n("a",d,[s("Prometheus"),t(a)])])])]),k,n("h1",m,[n("a",v,[n("span",null,[n("a",g,[s("Metric Types"),t(a)])])])]),n("p",null,[h,s("，可以参考"),n("a",b,[s("这篇"),t(a)]),s("。")]),f,n("h1",y,[n("a",_,[n("span",null,[n("a",q,[s("命名规范"),t(a)])])])]),x,j,n("blockquote",null,[n("p",null,[n("a",w,[s("PushProxy"),t(a)])])]),C])}const N=p(l,[["render",P],["__file","Prometheus.html.vue"]]),R=JSON.parse('{"path":"/%E7%BB%84%E4%BB%B6%E7%AC%94%E8%AE%B0/Prometheus.html","title":"Prometheus","lang":"zh-CN","frontmatter":{"description":"Prometheus architecturearchitecture Metric Types 四种监控指标，可以参考这篇。 Counter Gauge 计量器，可增可减，可升可降。 一般用于： 监测并发请求数量 监测CPU使用率 监测JVM线程数量等 Summary Histogram 命名规范 网络 image-20210713170454537...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%BB%84%E4%BB%B6%E7%AC%94%E8%AE%B0/Prometheus.html"}],["meta",{"property":"og:site_name","content":"郑振宁的数字资产中心"}],["meta",{"property":"og:title","content":"Prometheus"}],["meta",{"property":"og:description","content":"Prometheus architecturearchitecture Metric Types 四种监控指标，可以参考这篇。 Counter Gauge 计量器，可增可减，可升可降。 一般用于： 监测并发请求数量 监测CPU使用率 监测JVM线程数量等 Summary Histogram 命名规范 网络 image-20210713170454537..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://tva1.sinaimg.cn/large/008i3skNgy1gsffp140x9j311j0mjjtq.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"郑振宁"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Prometheus\\",\\"image\\":[\\"https://tva1.sinaimg.cn/large/008i3skNgy1gsffp140x9j311j0mjjtq.jpg\\",\\"https://tva1.sinaimg.cn/large/008i3skNgy1gsffldhokij316006ugno.jpg\\",\\"https://tva1.sinaimg.cn/large/008i3skNgy1gswmuvdxefj31c60s2juh.jpg\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"郑振宁\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Counter","slug":"counter","link":"#counter","children":[]},{"level":2,"title":"Gauge","slug":"gauge","link":"#gauge","children":[]},{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]},{"level":2,"title":"Histogram","slug":"histogram","link":"#histogram","children":[]},{"level":2,"title":"基础信息","slug":"基础信息","link":"#基础信息","children":[]},{"level":2,"title":"系统结构","slug":"系统结构","link":"#系统结构","children":[]},{"level":2,"title":"核心技术","slug":"核心技术","link":"#核心技术","children":[]},{"level":2,"title":"待监控","slug":"待监控","link":"#待监控","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":2.16,"words":647},"filePathRelative":"组件笔记/Prometheus.md","excerpt":"\\n<figure><img src=\\"https://tva1.sinaimg.cn/large/008i3skNgy1gsffp140x9j311j0mjjtq.jpg\\" alt=\\"architecture\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>architecture</figcaption></figure>\\n<h1><a class=\\"header-anchor\\" href=\\"#metric-types\\"><span></span></a><a href=\\"https://prometheus.io/docs/concepts/metric_types/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Metric Types</a></h1>","autoDesc":true}');export{N as comp,R as data};
