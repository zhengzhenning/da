import{_ as i,r as l,o as r,c as o,a as n,b as e,d as s,e as t}from"./app-CPlsgIRu.js";const c={},d=n("div",{class:"hint-container important"},[n("p",{class:"hint-container-title"},"重要"),n("p",null,[n("code",null,"sqshq/piggymetrics"),e(" 用于学习和了解微服务架构")]),n("p",null,"Microservice Architecture with Spring Boot, Spring Cloud and Docker")],-1),p={href:"https://github.com/sqshq/piggymetrics",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"sqshq/piggymetrics",-1),u=n("ol",null,[n("li",null,"本地启动项目"),n("li",null,"容器化部署项目")],-1),g=n("p",null,"参考资料：",-1),h={href:"https://www.yuanqingfei.com/2021-12-27%20%E5%AD%A6%E4%B9%A0Spring%20Cloud%E4%B9%8B%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/",target:"_blank",rel:"noopener noreferrer"},b=t('<h1 id="版本说明" tabindex="-1"><a class="header-anchor" href="#版本说明"><span>版本说明</span></a></h1><table><thead><tr><th style="text-align:center;">组件/语言/框架/工具</th><th style="text-align:center;">版本</th></tr></thead><tbody><tr><td style="text-align:center;">Java</td><td style="text-align:center;"><code>8</code></td></tr><tr><td style="text-align:center;">SpringBoot</td><td style="text-align:center;"><code>2.0.3.RELEASE</code></td></tr><tr><td style="text-align:center;">SpringCloud</td><td style="text-align:center;"><code>Finchley.RELEASE</code></td></tr><tr><td style="text-align:center;">MongoDB</td><td style="text-align:center;"><code>5.0.5</code></td></tr><tr><td style="text-align:center;">RabbitMQ</td><td style="text-align:center;"><code>3.9.11</code></td></tr><tr><td style="text-align:center;">IDEA</td><td style="text-align:center;"><code>2022.3.1</code></td></tr></tbody></table>',2),v={href:"https://docs.spring.io/spring-data/mongodb/docs/3.2.4/reference/html/#preface",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.spring.io/spring-data/mongodb/docs/3.2.4/reference/html/#compatibility.matrix",target:"_blank",rel:"noopener noreferrer"},_=t(`<h1 id="本地启动项目" tabindex="-1"><a class="header-anchor" href="#本地启动项目"><span>本地启动项目</span></a></h1><h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h2><h3 id="部署-mongdb" tabindex="-1"><a class="header-anchor" href="#部署-mongdb"><span>部署 MongDB</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#安装</span>
<span class="token function">docker</span> pull mongodb:latest

<span class="token comment">#运行</span>
<span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">--name</span> mongodb <span class="token parameter variable">-p</span> <span class="token number">27017</span>:27017 mongo:latest <span class="token parameter variable">--auth</span>
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> mongodb-with-auth <span class="token punctuation">\\</span>
  <span class="token parameter variable">-e</span> <span class="token assign-left variable">MONGO_INITDB_ROOT_USERNAME</span><span class="token operator">=</span>user <span class="token punctuation">\\</span>
  <span class="token parameter variable">-e</span> <span class="token assign-left variable">MONGO_INITDB_ROOT_PASSWORD</span><span class="token operator">=</span>password <span class="token punctuation">\\</span>
  <span class="token parameter variable">-d</span> mongo:latest <span class="token parameter variable">--authenticationDatabase</span><span class="token operator">=</span>admin
  
<span class="token comment">#进入容器</span>
<span class="token function">docker</span> <span class="token function">ps</span> 
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> 镜像ID /bin/bash

<span class="token comment">#登录</span>
mongo <span class="token parameter variable">-u</span> user <span class="token parameter variable">-p</span> password

<span class="token comment">#查看数据库</span>
show dbs

<span class="token comment">#选择admin</span>
use admin

<span class="token comment">#配置账户密码 docker exec 进入容器内执行语句配置账户密码</span>
db.createUser<span class="token punctuation">(</span> <span class="token punctuation">{</span> user: <span class="token string">&quot;user&quot;</span>,
                 pwd: <span class="token string">&quot;password&quot;</span>,  
                 roles: <span class="token punctuation">[</span> <span class="token punctuation">{</span> role: <span class="token string">&quot;clusterAdmin&quot;</span>, db: <span class="token string">&quot;admin&quot;</span> <span class="token punctuation">}</span>,
                          <span class="token punctuation">{</span> role: <span class="token string">&quot;readAnyDatabase&quot;</span>, db: <span class="token string">&quot;admin&quot;</span> <span class="token punctuation">}</span>,
                          <span class="token string">&quot;readWrite&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>,
               <span class="token punctuation">{</span> w: <span class="token string">&quot;majority&quot;</span> , wtimeout: <span class="token number">5000</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">#验证</span>
db.antu<span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span>,<span class="token string">&#39;password&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="部署-rabbitmq" tabindex="-1"><a class="header-anchor" href="#部署-rabbitmq"><span>部署 RabbitMQ</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#安装</span>
<span class="token function">docker</span> pull rabbitmq:latest

<span class="token comment">#运行</span>
<span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--hostname</span> rabbitmq <span class="token parameter variable">--name</span> rabbit <span class="token parameter variable">-p</span> <span class="token number">15672</span>:15672 <span class="token parameter variable">-p</span> <span class="token number">5672</span>:5672 rabbitmq

<span class="token comment">#进容器内</span>
<span class="token function">docker</span> <span class="token function">ps</span> 
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> 镜像ID /bin/bash

<span class="token comment">#安装控制台</span>
rabbitmq-plugins <span class="token builtin class-name">enable</span> rabbitmq_management
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),f={href:"http://localhost:15672",target:"_blank",rel:"noopener noreferrer"},y=n("figure",null,[n("img",{src:"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20240419181359991.png",alt:"image-20240419181359991",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20240419181359991")],-1),E=n("h3",{id:"安装-idea插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装-idea插件"},[n("span",null,"安装 IDEA插件")])],-1),q={href:"https://plugins.jetbrains.com/plugin/7861-envfile",target:"_blank",rel:"noopener noreferrer"},x=t('<h3 id="调整配置文件" tabindex="-1"><a class="header-anchor" href="#调整配置文件"><span>调整配置文件</span></a></h3><h2 id="启动服务" tabindex="-1"><a class="header-anchor" href="#启动服务"><span>启动服务</span></a></h2><h2 id="问题记录" tabindex="-1"><a class="header-anchor" href="#问题记录"><span>问题记录</span></a></h2>',3),B=n("code",null,"MongoDB",-1),A=n("code",null,"MongoSecurityException",-1),D={href:"https://howtodoinjava.com/mongodb/command-failed-with-error-18/",target:"_blank",rel:"noopener noreferrer"},w=t(`<figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20240419160749189.png" alt="image-20240419160749189" tabindex="0" loading="lazy"><figcaption>image-20240419160749189</figcaption></figure><p>在 <code>shared/account-service.yml</code> 指定 <code>authentication-database</code> 配置：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>spring:
  data:
    mongodb:
#      host: account-mongodb
      # 本地环境
      host: localhost
      username: user
      password: password
      database: piggymetrics
      # 指定鉴权数据库
      authentication-database: admin
      port: 27017
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function S(z,M){const a=l("ExternalLinkIcon");return r(),o("div",null,[d,n("p",null,[e("基于 "),n("a",p,[e("piggymetrics"),s(a)]),e(" 搭建微服务，以 "),m,e(" 项目为载体，达成2个目的：")]),u,g,n("ul",null,[n("li",null,[n("a",h,[e("学习Spring Cloud之本地部署"),s(a)])])]),b,n("ul",null,[n("li",null,[n("a",v,[e("https://docs.spring.io/spring-data/mongodb/docs/3.2.4/reference/html/#preface"),s(a)]),e(" mongodb版本适配")]),n("li",null,[n("a",k,[e("https://docs.spring.io/spring-data/mongodb/docs/3.2.4/reference/html/#compatibility.matrix"),s(a)]),e(" 兼容性适配")])]),_,n("p",null,[e("访问："),n("a",f,[e("http://localhost:15672"),s(a)]),e(" ， 账户/密码：guest/guest")]),y,E,n("ul",null,[n("li",null,[e("安装 "),n("a",q,[e("EnvFile"),s(a)]),e(" 插件")])]),x,n("p",null,[e("连接 "),B,e(" 失败，报 "),A,e("，参考"),n("a",D,[e("这篇"),s(a)]),e("。")]),w])}const N=i(c,[["render",S],["__file","1架构搭建.html.vue"]]),I=JSON.parse('{"path":"/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/1%E6%9E%B6%E6%9E%84%E6%90%AD%E5%BB%BA.html","title":"架构搭建","lang":"zh-CN","frontmatter":{"title":"架构搭建","order":2,"icon":"file","category":["微服务","架构","框架","搭建"],"description":"重要 sqshq/piggymetrics 用于学习和了解微服务架构 Microservice Architecture with Spring Boot, Spring Cloud and Docker 基于 piggymetrics 搭建微服务，以 sqshq/piggymetrics 项目为载体，达成2个目的： 本地启动项目 容器化部署项目 参考...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/1%E6%9E%B6%E6%9E%84%E6%90%AD%E5%BB%BA.html"}],["meta",{"property":"og:site_name","content":"郑振宁的数字资产中心"}],["meta",{"property":"og:title","content":"架构搭建"}],["meta",{"property":"og:description","content":"重要 sqshq/piggymetrics 用于学习和了解微服务架构 Microservice Architecture with Spring Boot, Spring Cloud and Docker 基于 piggymetrics 搭建微服务，以 sqshq/piggymetrics 项目为载体，达成2个目的： 本地启动项目 容器化部署项目 参考..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20240419181359991.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-16T06:32:39.000Z"}],["meta",{"property":"article:author","content":"郑振宁"}],["meta",{"property":"article:modified_time","content":"2024-04-16T06:32:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"架构搭建\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20240419181359991.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20240419160749189.png\\"],\\"dateModified\\":\\"2024-04-16T06:32:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"郑振宁\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[{"level":3,"title":"部署 MongDB","slug":"部署-mongdb","link":"#部署-mongdb","children":[]},{"level":3,"title":"部署 RabbitMQ","slug":"部署-rabbitmq","link":"#部署-rabbitmq","children":[]},{"level":3,"title":"安装 IDEA插件","slug":"安装-idea插件","link":"#安装-idea插件","children":[]},{"level":3,"title":"调整配置文件","slug":"调整配置文件","link":"#调整配置文件","children":[]}]},{"level":2,"title":"启动服务","slug":"启动服务","link":"#启动服务","children":[]},{"level":2,"title":"问题记录","slug":"问题记录","link":"#问题记录","children":[]}],"git":{"createdTime":1713249159000,"updatedTime":1713249159000,"contributors":[{"name":"一步","email":"zzn_workmail@163.com","commits":1}]},"readingTime":{"minutes":1.49,"words":447},"filePathRelative":"微服务架构/1架构搭建.md","localizedDate":"2024年4月16日","excerpt":"<div class=\\"hint-container important\\">\\n<p class=\\"hint-container-title\\">重要</p>\\n<p><code>sqshq/piggymetrics</code> 用于学习和了解微服务架构</p>\\n<p>Microservice Architecture with Spring Boot, Spring Cloud and Docker</p>\\n</div>\\n<p>基于 <a href=\\"https://github.com/sqshq/piggymetrics\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">piggymetrics</a> 搭建微服务，以  <code>sqshq/piggymetrics</code> 项目为载体，达成2个目的：</p>","autoDesc":true}');export{N as comp,I as data};
