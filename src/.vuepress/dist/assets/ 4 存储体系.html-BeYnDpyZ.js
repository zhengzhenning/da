import{_ as t,c as e,o as l,d as n,b as s,e as a}from"./app-tJcfqY5a.js";const i={},m=n('<h1 id="存储体系" tabindex="-1"><a class="header-anchor" href="#存储体系"><span>存储体系 *</span></a></h1><p><a href="https://www.icourse163.org/course/HUST-1207109824?tid=1207462224" target="_blank" rel="noopener noreferrer">华中科技大学-计算机系统结构</a></p><ol><li>存储体系概念 <ol><li>定义、分支、依据</li><li>主要指标参数的计算</li></ol></li><li>虚拟存储体系 <ol><li>3 种虚拟管理方式的原理、地址映像规则、影响表机构、地址变换过程、各自优缺点</li><li><strong>段页式虚拟存储器</strong>中，<strong>由虚地址计算实地址</strong>；根据映像表内容计算主存实地址；判断段失效、页失效、保护失效</li><li>页式虚拟存储器中，虚实地址字段的对应关系、地址映像规则；由虚地址查映像表计算实主存地址，或判断页失效</li><li>用 <strong>FIFO</strong>、<strong>LRU</strong>、OPT 算法页面替换的过程模拟，计算命中率</li><li>堆栈型替换算法定义、种类；给出程序运行时的虚页地址流用 LRU 替换算法进行堆栈模拟处理，求不同实页数的命中率</li><li>PFF 替换算法的原理；二道程序给出各自程序运行中得虚页地址流，合理分配给它们的实主存页数，使系统效率最高</li><li>分析虚拟存储器得页面大小、分配给主存容量与主存命中率的变化趋势，给出综合评估和改进虚拟存储器性能得办法</li></ol></li><li>Cache 存储器</li><li>三级存储体系的组织</li></ol><h1 id="真题" tabindex="-1"><a class="header-anchor" href="#真题"><span>真题</span></a></h1><h2 id="简答题·全" tabindex="-1"><a class="header-anchor" href="#简答题·全"><span>简答题·全</span></a></h2><p>【虚拟存储器篇】</p><p>简述页式虚拟存储器<strong>页面失效</strong>和<strong>实页冲突</strong>发生的原因及所确定<strong>替换算法</strong>的依据 <strong>2104</strong> <strong>0707</strong></p><p>简述提出<strong>虚拟存储器</strong>的原因并根据<strong>存储映像算法</strong>的不同写出虚拟存储器主要的三种<strong>存储管理方式</strong>。<strong>2010</strong></p><p>简述在采用<strong>页式虚拟存储器</strong>的系统中，<strong>页面失效频率(PFF)算法</strong>的思想。<strong>1304</strong></p><p>简述提高模m值，影响主存实际频宽的因素及结果。<strong>1904</strong> <strong>0604</strong> x2</p><blockquote><p>对模m交叉，若都是顺序取指，则效率可提高m倍；</p><p>转移指令的客观存在性会降低主存系统的效率；</p><p>模m越大，总线越长，传输速度越慢；</p><p>因此，提高模m能提高主存频宽，但二者不成线性关系。</p></blockquote><p>【Cache 存储器篇】</p><p>简述Cache<strong>全相联映像</strong>的概念及其优缺点 <strong>1910</strong></p><p>简述<strong>Cache存储器地址映像</strong>、<strong>地址变换</strong>的概念以及<strong>映像规则</strong>的选择要求 <strong>1610</strong></p><p>简述更新主存内容的<strong>写回法</strong>和<strong>写直达法</strong>的基本原理 <strong>2204</strong> <strong>1804</strong> <strong>1710</strong> x</p><h2 id="应用题·全" tabindex="-1"><a class="header-anchor" href="#应用题·全"><span>应用题·全</span></a></h2><h3 id="提高c的等效访问速度-命中率h" tabindex="-1"><a class="header-anchor" href="#提高c的等效访问速度-命中率h"><span>提高C的等效访问速度（命中率H）**</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212201704104.png" alt="image-20230212201704104" tabindex="0" loading="lazy"><figcaption>image-20230212201704104</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_9605.jpeg" alt="IMG_9605" tabindex="0" loading="lazy"><figcaption>IMG_9605</figcaption></figure>',19),g=s("p",null,[a("已知 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"t_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 是Cache的访问时间；"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"t_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 是主存周期；"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"a")])]),s("annotation",{encoding:"application/x-tex"},"t_a")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"a")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("是等效存储周期；"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"H"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"H_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0813em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 是访Cache的命中率，那么：")],-1),r=s("p",null,[a("（1）增大主存容量，对 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"H"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"H_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0813em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 基本不影响。虽然增大主存容量可能会使 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"t_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 稍微有所加大，但如果 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"H"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"H_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0813em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 已经很高，那么这种 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"t_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 的增大对 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"a")])]),s("annotation",{encoding:"application/x-tex"},"t_a")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"a")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 的增大不会有明显的影响。")],-1),p=s("p",null,[a("（2）增大Cache中的块数，而块的大小不变，意味着Cache的容量增大了。由于 LRU替换算法属于堆栈型算法，因此将使 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"H"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"H_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0813em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 上升，从而使 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"a")])]),s("annotation",{encoding:"application/x-tex"},"t_a")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"a")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 缩短。"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"a")])]),s("annotation",{encoding:"application/x-tex"},"t_a")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"a")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 是否显著降低取决于"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"H"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"H_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0813em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("所处的水平，若 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"H"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"H_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0813em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 较低，则 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"a")])]),s("annotation",{encoding:"application/x-tex"},"t_a")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"a")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 会显著降低，反之则无明显变化。")],-1),h=s("p",null,[a("（3）增大组相联组的大小，块的大小不变，意味着组内的块数增大了。这将使块的冲突概率下降，块的替换次数减少，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"H"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"H_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0813em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 上升，从而使 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"a")])]),s("annotation",{encoding:"application/x-tex"},"t_a")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"a")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 缩短。"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"a")])]),s("annotation",{encoding:"application/x-tex"},"t_a")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"a")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 是否显著降低取决于"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"H"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"H_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0813em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("所处的水平，若 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"H"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"H_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0813em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 较低，则 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"a")])]),s("annotation",{encoding:"application/x-tex"},"t_a")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"a")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 会显著降低，反之则无明显变化。")],-1),c=s("p",null,"（4）增大块的大小，且组的大小和cache总容量不变。与（3）一致。",-1),o=s("p",null,[a("（5）提高 Cache 本身器件的访问速度，即减小 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"t_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 的时间。仅当 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"H"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"H_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0813em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 很高时，才会显著缩短 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"t"),s("mi",null,"a")])]),s("annotation",{encoding:"application/x-tex"},"t_a")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"a")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 。")],-1),d=n('<h3 id="单体交叉存储器转移概率" tabindex="-1"><a class="header-anchor" href="#单体交叉存储器转移概率"><span>单体交叉存储器转移概率</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212201748375.png" alt="image-20230212201748375" tabindex="0" loading="lazy"><figcaption>image-20230212201748375</figcaption></figure><h3 id="cache-存储器替换" tabindex="-1"><a class="header-anchor" href="#cache-存储器替换"><span>Cache 存储器替换</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230322220917610.png" alt="image-20230322220917610" tabindex="0" loading="lazy"><figcaption>image-20230322220917610</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230322223013764.png" alt="image-20230322223013764" tabindex="0" loading="lazy"><figcaption>image-20230322223013764</figcaption></figure><h3 id="虚拟存储器替换" tabindex="-1"><a class="header-anchor" href="#虚拟存储器替换"><span>虚拟存储器替换</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216195451765.png" alt="image-20230216195451765" tabindex="0" loading="lazy"><figcaption>image-20230216195451765</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230322221154535.png" alt="image-20230322221154535" tabindex="0" loading="lazy"><figcaption>image-20230322221154535</figcaption></figure><ul><li><p><strong>实页数=主存容量/页面大小</strong>；</p></li><li><p><strong>虚页地址流=地址流/页面大小</strong></p></li></ul><h3 id="存储体系的性能参数" tabindex="-1"><a class="header-anchor" href="#存储体系的性能参数"><span>存储体系的性能参数</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216195611689.png" alt="image-20230216195611689" tabindex="0" loading="lazy"><figcaption>image-20230216195611689</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216195632666.png" alt="image-20230216195632666" tabindex="0" loading="lazy"><figcaption>image-20230216195632666</figcaption></figure><h1 id="存储系统" tabindex="-1"><a class="header-anchor" href="#存储系统"><span>存储系统</span></a></h1><h2 id="定义-·" tabindex="-1"><a class="header-anchor" href="#定义-·"><span>定义 ·</span></a></h2><p>两个或两个以上<strong>速度</strong>、<strong>容量</strong>和<strong>价格</strong>各不相同的存储器用<strong>硬件</strong>、<strong>软件</strong>、或<strong>软硬结合</strong>的方式连接起来构成<strong>存储系统</strong>。计算机一般有两种存储系统：</p><ul><li>Cache 存储系统</li><li>虚拟存储系统</li></ul><blockquote><p>【图】由多个存储器构成的存储系统</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212123046510.png" alt="image-20230212123046510" tabindex="0" loading="lazy"><figcaption>image-20230212123046510</figcaption></figure><p>再具化一点：</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212123323599.png" alt="image-20230212123323599" tabindex="0" loading="lazy"><figcaption>image-20230212123323599</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212123617425.png" alt="image-20230212123617425" tabindex="0" loading="lazy"><figcaption>image-20230212123617425</figcaption></figure><p>从上面可以得出一个结论：CPU 与主存储器的速度差距越来越大，且今后差距会更大。</p></blockquote><h2 id="基本要求" tabindex="-1"><a class="header-anchor" href="#基本要求"><span>基本要求 *</span></a></h2><p>对存储系统的基本要求：<strong>大容量</strong>、<strong>高速度</strong>、<strong>低价格</strong>。</p><p>对于这些要求，有几个公式需要记：*****</p>',20),u=s("ul",null,[s("li",null,[s("p",null,[a("存储器"),s("strong",null,"容量"),a("的公式 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"S"),s("mi",null,"M")]),s("mo",null,"="),s("mi",null,"W"),s("mo",{separator:"true"},"⋅"),s("mi",null,"m"),s("mo",{separator:"true"},"⋅"),s("mi",null,"l")]),s("annotation",{encoding:"application/x-tex"},"S_M=W·m·l")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0576em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"M")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"mpunct"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mpunct"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l")])])]),a(),s("u",null,[s("strong",null,"简记：一碗麻辣粉")])]),s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"W")]),s("annotation",{encoding:"application/x-tex"},"W")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W")])])]),a(" - 存储体的字长")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m")]),s("annotation",{encoding:"application/x-tex"},"m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"m")])])]),a(" - 存储体的个数")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l")]),s("annotation",{encoding:"application/x-tex"},"l")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l")])])]),a(" - 存储体的字数")])])]),s("li",null,[s("p",null,[a("单/多体"),s("strong",null,"频宽"),a("的公式 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"B"),s("mi",null,"m")]),s("mo",null,"="),s("mi",null,"m"),s("mo",{separator:"true"},"⋅"),s("mi",null,"W"),s("mi",{mathvariant:"normal"},"/"),s("msub",null,[s("mi",null,"T"),s("mi",null,"M")])]),s("annotation",{encoding:"application/x-tex"},"B_m=m·W/T_M")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0502em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mpunct"},"⋅"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W"),s("span",{class:"mord"},"/"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"M")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 当"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"m=1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a("时名为单体公式。")]),s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m")]),s("annotation",{encoding:"application/x-tex"},"m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"m")])])]),a(" - 存储体的个数")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"W")]),s("annotation",{encoding:"application/x-tex"},"W")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"W")])])]),a(" - 存储体的字长")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mi",null,"M")])]),s("annotation",{encoding:"application/x-tex"},"T_M")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"M")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" - 连续启动一个存储体所需的间隔时间")])])])],-1),x=n('<p><strong>最大频宽</strong>与<strong>实际频宽</strong>的区别：<strong>最大频宽</strong>是<strong>存储器连续访问时的频宽</strong>，实际频宽：一般低于最大频宽。 <strong>^</strong></p><blockquote><p>【例】1610#26、1504#26</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212121410491.png" alt="image-20230212121410491" tabindex="0" loading="lazy"><figcaption>image-20230212121410491</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212121439209.png" alt="image-20230212121439209" tabindex="0" loading="lazy"><figcaption>image-20230212121439209</figcaption></figure></blockquote><p>人们总是期望“存储器的速度能与 CPU 相匹敌”，但是存储器的“<strong>容量</strong>、<strong>速度</strong>、<strong>价格</strong>”存在着相互制约的关系。因此，为了弥补 CPU 和存储器在速度上的差异，一条途径是在组成上引入<strong>并行</strong>和<strong>重叠</strong>技术，构成<strong>并行主存系统</strong>。通过这种方式可以实现“在每位价格基本保持不变的前提上，提高主存的频宽”。</p><blockquote><p>谈存储时，一定要关注3样东西：容量、速度、价格。</p></blockquote><p>容量、速度、价格有着这样一种关系：容量越大，速度越低，价格越高。</p><h2 id="并行主存系统" tabindex="-1"><a class="header-anchor" href="#并行主存系统"><span>并行主存系统**</span></a></h2><p>概念：能够并行读出多个 CPU 的<strong>单体多字</strong>、<strong>多体单字</strong>、<strong>多体多字</strong>的交叉访问主存系统，统称为<strong>并行主存系统</strong>。</p><p><strong>并行主存系统的频宽分析结论</strong>：</p><p>提高模m,可以提高并行主存系统的速度（频宽），但实际频宽并不随着m的提高而线性提高。因为：</p><p>① 模m越大，<strong>总线</strong>越长，传输速度越慢。</p><p>② <strong>转移指令</strong>的客观存在性会导致存储器的并行访问效率下降。</p><p>因此：提高m的值能提高主存系统的最大频宽，但主存的实际频宽并不随m值增大而线性提高，实际效率偏低。</p><blockquote><p>【图】并行访问存储器结构框图</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212123752183.png" alt="image-20230212123752183" tabindex="0" loading="lazy"><figcaption>image-20230212123752183</figcaption></figure></blockquote><h3 id="每周期能访问的平均字数" tabindex="-1"><a class="header-anchor" href="#每周期能访问的平均字数"><span>每周期能访问的平均字数 *</span></a></h3><blockquote><p>【例】讨论模32和模16的多体单字存储器中，每个周期你呢个访问到的平均字数 （<strong>记住公式，带上计算器</strong>）</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_9424.jpeg" alt="IMG_9424" tabindex="0" loading="lazy"><figcaption>IMG_9424</figcaption></figure></blockquote><h1 id="存储体系-1" tabindex="-1"><a class="header-anchor" href="#存储体系-1"><span>存储体系</span></a></h1>',16),v=s("p",null,[a("存储体系是让构成存储系统的几种不同的存储器（"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"M"),s("mn",null,"1")]),s("mtext",null," "),s("msub",null,[s("mi",null,"M"),s("mi",null,"n")])]),s("annotation",{encoding:"application/x-tex"},"M_1 ~ M_n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"n")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("）之间，配上辅助软、硬件或辅助硬件，使之从应用程序员角度来看，它在逻辑上是一个整体。不同于存储系统，存储系统是由多个存储器简单的组合在一起。")],-1),z=n('<p>一般有两种基本的二级存储体系：</p><ol><li>虚拟存储器。因<strong>主存容量</strong>不满足要求而提出来的。</li><li>Cache 存储器。因<strong>主存速度</strong>不满足要求而提出来的。</li></ol><table><thead><tr><th style="text-align:center;">虚拟存储器</th><th style="text-align:center;">Cache 存储器</th></tr></thead><tbody><tr><td style="text-align:center;"><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212124946461.png" alt="image-20230212124946461" loading="lazy"></td><td style="text-align:center;"><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212124935827.png" alt="image-20230212124935827" loading="lazy"></td></tr><tr><td style="text-align:center;">目的：扩容</td><td style="text-align:center;">目的：提速</td></tr></tbody></table><h2 id="构成依据-局部性" tabindex="-1"><a class="header-anchor" href="#构成依据-局部性"><span>构成依据（局部性）**</span></a></h2><blockquote><p>简述计算机程序时间上的局部性和空间上的局部性 <strong>2210</strong></p></blockquote><p>《计算机系统结构（2012版）》ch4p127</p><p>基于<strong>程序的局部性</strong>预知未来被访问信息的地址，包括<strong>时间的局部性</strong>和<strong>空间的局部性</strong>。其中：</p><p><strong>时间上的局部性</strong>系指在最近的未来要用到的信息很可能是现在正在使用的信息。这是因为程序存在循环。</p><p><strong>空间上的局部性</strong>系指在最近的未来要用的信息很可能与现在正在的使用的信息在程序空间上是邻近的。这是因为指令和数据一般都是相对簇聚成页或块的。</p><p>预知的准确性是设计存储体系好坏的主要标志，一般取决于<strong>算法</strong>和<strong>地址映像变换方式</strong>。</p><h2 id="性能参数" tabindex="-1"><a class="header-anchor" href="#性能参数"><span>性能参数</span></a></h2><p>评价存储器性能需引入3个指标：</p>',12),y=s("ul",null,[s("li",null,[a("每位价格 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"c")]),s("annotation",{encoding:"application/x-tex"},"c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"c")])])])]),s("li",null,[a("命中率 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"H")]),s("annotation",{encoding:"application/x-tex"},"H")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H")])])])]),s("li",null,[a("等效访问时间 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mi",null,"A")])]),s("annotation",{encoding:"application/x-tex"},"T_A")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"A")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])],-1),b=n('<p>以此图例给出公式：</p><blockquote><p>【图】由两个存储器构成的存储系统</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212130708243.png" alt="image-20230212130708243" tabindex="0" loading="lazy"><figcaption>image-20230212130708243</figcaption></figure><p>其中， S - 容量；C - 每位价格；T - 访问时间</p></blockquote><h3 id="计算价格" tabindex="-1"><a class="header-anchor" href="#计算价格"><span>计算价格</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212130848052.png" alt="image-20230212130848052" tabindex="0" loading="lazy"><figcaption>image-20230212130848052</figcaption></figure><h3 id="计算命中率" tabindex="-1"><a class="header-anchor" href="#计算命中率"><span>计算命中率</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212130928879.png" alt="image-20230212130928879" tabindex="0" loading="lazy"><figcaption>image-20230212130928879</figcaption></figure><h3 id="计算平均访问时间" tabindex="-1"><a class="header-anchor" href="#计算平均访问时间"><span>计算平均访问时间 **</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212131145609.png" alt="image-20230212131145609" tabindex="0" loading="lazy"><figcaption>image-20230212131145609</figcaption></figure><h3 id="计算访问效率" tabindex="-1"><a class="header-anchor" href="#计算访问效率"><span>计算访问效率 **</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212130951283.png" alt="image-20230212130951283" tabindex="0" loading="lazy"><figcaption>image-20230212130951283</figcaption></figure><p><strong>访问效率</strong>与<strong>命中率</strong>和<strong>两级存储器的速度之比</strong>有关：</p>',11),f=s("blockquote",null,[s("figure",null,[s("img",{src:"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212131106510.png",alt:"image-20230212131106510",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image-20230212131106510")]),s("p",null,[a("由图可知，人们总是期望等效访问效率 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"e"),s("mo",null,"→"),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"e→1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a(" ，那么：")]),s("p",null,[a("在 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"r")]),s("annotation",{encoding:"application/x-tex"},"r")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r")])])]),a(" 越大时，若要求 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"e"),s("mo",null,"→"),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"e→1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a(" ，则 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"H"),s("mo",null,"→"),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"H→1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"→"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a("。即"),s("strong",null,"等效访问速度与命中率密切相关"),a("。")])],-1),w=n('<h1 id="虚拟存储器" tabindex="-1"><a class="header-anchor" href="#虚拟存储器"><span>虚拟存储器</span></a></h1><p>虚拟存储器通过增设地址映像表机构来实现程序在主存中的定位。将程序分割成若干段或页，再用映像表指明程序的某段或某页是否已装入主存。若已装入，指明其在主存中的起始位置；若未装入，就去辅存中调段或调页，装入主存后在映像表中建立好程序空间和实存空间的地址映像关系。如此，<strong>【1910】程序执行时通过查映像表将程序（虚）地址变换成实（主）存地址再访问主存</strong>。</p><ul><li><p>📚《计算机系统结构》page#134：虚实地址对应关系及空间压缩</p></li><li><p><a href="https://www.icourse163.org/learn/HUST-1207109824?tid=1207462224#/learn/content?type=detail&amp;id=1214308278&amp;sm=1" target="_blank" rel="noopener noreferrer">华中科大-谢长生：虚拟存储器</a></p></li></ul><p>提出虚拟存储器的原因：主存<strong>容量</strong>满足不了要求。</p><p>虚拟存储器研究4个问题：</p><ol><li>映像规则：全相联</li><li>查找算法：页表、段表、<strong>TLB</strong>*</li><li>替换算法：LRU</li><li>写策略：写回法</li></ol><h2 id="存储管理方式" tabindex="-1"><a class="header-anchor" href="#存储管理方式"><span>存储管理方式</span></a></h2><p>根据存储映像算法的不同，可有多种不同的存储管理方式的虚拟存储器，其中主要有 3 种存储管理方式：<strong>段式</strong>、<strong>页式</strong>、<strong>段页式</strong>。</p><h2 id="段式虚拟存储器" tabindex="-1"><a class="header-anchor" href="#段式虚拟存储器"><span>段式虚拟存储器</span></a></h2><p>程序都是有<strong>模块性</strong>，一个复杂的大程序总是可以分解成多个逻辑上相对独立的模块。这些模块可以是<strong>主程序</strong>、<strong>子程序</strong>或<strong>过程</strong>，也可以是<strong>数据块</strong>。 <strong>^</strong></p><p>段式管理：将<strong>主存</strong>按<strong>段</strong>分配的管理方式，即为段式管理。</p><h3 id="地址映像" tabindex="-1"><a class="header-anchor" href="#地址映像"><span>地址映像</span></a></h3><blockquote><p>【图】段式虚拟存储器的地址映像方式<img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212132840646.png" alt="image-20230212132840646" loading="lazy"></p><p>从这张图里，要看懂 2 个地方：</p><ol><li>每个程序段的从 0 开始编址</li><li>每个程序的段长，可长可短</li></ol></blockquote><h3 id="地址变换" tabindex="-1"><a class="header-anchor" href="#地址变换"><span>地址变换</span></a></h3><blockquote><p>【图】段式虚拟存储器的地址变换方法</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212133514178.png" alt="image-20230212133514178" tabindex="0" loading="lazy"><figcaption>image-20230212133514178</figcaption></figure></blockquote><h3 id="优缺点" tabindex="-1"><a class="header-anchor" href="#优缺点"><span>优缺点</span></a></h3><p>优点方面：<strong>模块化性能高</strong>，便于程序和数据的共享；程序的动态链接和调度比较容易；便于实现信息保护。</p><p>缺点方面：地址变换时间长；主存储器利用率低；辅存管理困难。</p><h2 id="页式虚拟存储器" tabindex="-1"><a class="header-anchor" href="#页式虚拟存储器"><span>页式虚拟存储器 * *</span></a></h2><p>段式存储的诸多缺点，比如辅助开销大、查表速度慢、段间零头多等问题，促使人们提出了页式存储。</p><p><strong>页式存储</strong>是把<strong>主存空间</strong>和<strong>程序空间</strong>都<strong>机械地等分</strong>成固定大小的页，按页顺序编号。</p><h3 id="地址映像-1" tabindex="-1"><a class="header-anchor" href="#地址映像-1"><span>地址映像</span></a></h3><p>将<strong>主存块</strong>按某种规则装入<strong>Cache <strong>中；即建立</strong>多用户虚地址</strong>与<strong>主存地址</strong>的对应关系（<strong>一种函数关系</strong>）。</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212134701081.png" alt="image-20230212134701081" tabindex="0" loading="lazy"><figcaption>image-20230212134701081</figcaption></figure><p><strong>映像规则的选择要求（3看）</strong>：</p><ol><li>看<strong>硬件</strong>是否<strong>速度快</strong>、<strong>价格低</strong>和<strong>实现方便</strong></li><li>看<strong>块冲突概率</strong>是否低</li><li>看<strong>Cache 空间利用率</strong>是否高。</li></ol><h3 id="地址变换-1" tabindex="-1"><a class="header-anchor" href="#地址变换-1"><span>地址变换</span></a></h3><p>地址变换：将<strong>主存地址</strong>变换成 Cache 地址；</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212135023209.png" alt="image-20230212135023209" tabindex="0" loading="lazy"><figcaption>image-20230212135023209</figcaption></figure><h3 id="优缺点-1" tabindex="-1"><a class="header-anchor" href="#优缺点-1"><span>优缺点</span></a></h3><p>优点方面：</p><ul><li>主存储器的利用率比较高</li><li>页表相对比较简单</li><li>地址变换的速度比较快</li><li>对磁盘的管理比较容易</li></ul><p>缺点方面：</p><ul><li>程序模块化性能不好</li><li>页表很长，需占用很大的存储空间</li></ul><h3 id="页面替换算法" tabindex="-1"><a class="header-anchor" href="#页面替换算法"><span>页面替换算法 * ^</span></a></h3><h4 id="页面失效" tabindex="-1"><a class="header-anchor" href="#页面失效"><span>页面失效</span></a></h4><p>CPU 要使用的数据（或指令）不在<strong>主存</strong>时，会产生<strong>页面失效</strong>，需从<strong>辅存</strong>调取新页（页面中包含要使用的数据（或指令））</p><h4 id="实页冲突" tabindex="-1"><a class="header-anchor" href="#实页冲突"><span>实页冲突</span></a></h4><p>在<strong>主存已满</strong>的情况下发生了<strong>页面失效</strong>，那么从<strong>辅存</strong>调取新页到主存时，就会发生<strong>实页冲突</strong>。</p><p>为解决实页冲突问题，就必须通过<strong>页面替换算法</strong>来决定“选择主存中的哪个页面作为被替换的页”</p><h4 id="替换算法" tabindex="-1"><a class="header-anchor" href="#替换算法"><span>替换算法 * ^</span></a></h4><p><strong>替换算法的确定依据</strong> ：</p><ul><li><p>主存是否有高的命中率；</p></li><li><p>算法是否便于实现；</p></li><li><p>辅助软、硬件成本是否低。</p></li></ul><p>目前，主要的替换算法有：</p><ol><li>随机算法（已过时）</li><li>最优替换算法（OTP），理想型算法，仅作为评价其它算法好坏的标准</li><li><strong>先进先出算法（FIFO）</strong></li><li><strong>近期最少使用算法（LRU）</strong></li></ol><p>替换算法一般<strong>通过页地址流模拟其替换过程</strong>，再根据命中率的高低评价其好坏。<strong>影响命中率的因素</strong>除<strong>替换算法</strong>外，还有<strong>地址流</strong>、<strong>页面大小</strong>和<strong>主存容量</strong>等。<strong>^</strong></p><blockquote><p>【图】三种页面替换算法对同一页面地址流的调度过程</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212203934288.png" alt="image-20230212203934288" tabindex="0" loading="lazy"><figcaption>image-20230212203934288</figcaption></figure></blockquote><h3 id="堆栈型替换算法" tabindex="-1"><a class="header-anchor" href="#堆栈型替换算法"><span>堆栈型替换算法 * *</span></a></h3>',48),k=s("p",null,[s("strong",null,"定义"),a(" 对任意一个程序的"),s("strong",null,"页地址流"),a("作两次"),s("strong",null,"主存页面数分配"),a("，分别分配 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m")]),s("annotation",{encoding:"application/x-tex"},"m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"m")])])]),a(" 个主存页和 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" 个主存页面，且满足 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m"),s("mo",null,"≤"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"m≤n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7719em","vertical-align":"-0.136em"}}),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"≤"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"n")])])]),a(" 。若在任意时刻 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"t")]),s("annotation",{encoding:"application/x-tex"},"t")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6151em"}}),s("span",{class:"mord mathnormal"},"t")])])]),a(" ，主存页面集合 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"B"),s("mi",null,"t")])]),s("annotation",{encoding:"application/x-tex"},"B_t")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2806em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0502em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"t")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 都满足 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"B"),s("mi",null,"t")]),s("mo",{stretchy:"false"},"("),s("mi",null,"m"),s("mo",{stretchy:"false"},")"),s("mo",null,"⊆"),s("msub",null,[s("mi",null,"B"),s("mi",null,"t")]),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"B_t(m) ⊆ B_t(n)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2806em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0502em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"t")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"m"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"⊆"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2806em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0502em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"t")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},")")])])]),a(" 。 则此类算法称为"),s("strong",null,"堆栈型替换算法"),a("。")],-1),M=n('<p><strong>特点</strong> 随着分配给程序的主存页面数增加，主存的命中率也提高。</p><blockquote><p>LRU 是堆栈型替换算法、OPT也是 *</p></blockquote><p>不同的堆栈型替换算法，替换页号的过程也不同。<strong>对于 LRU 算法，是把主存中刚访问过的页号置于栈顶，把最久未访问的置于栈底</strong>。</p><blockquote><p>【例】使用 LRU 替换算法对页面地址流进行堆栈处理</p><p>可以从中看出最近访问和最久未被访问的页号如何处置</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_9425.jpeg" alt="IMG_9425" tabindex="0" loading="lazy"><figcaption>IMG_9425</figcaption></figure></blockquote><h3 id="页面失效频率-pff-算法" tabindex="-1"><a class="header-anchor" href="#页面失效频率-pff-算法"><span>页面失效频率（PFF）算法</span></a></h3><p>利用堆栈型替换算法的特点，人们对其加以改进并创造出了<strong>页面失效频率（PFF）算法</strong>：该算法可以根据程序运行中的<strong>主存页面失效率</strong>，来<strong>动态调整实页数</strong>。当主存页面失效率超过某个<strong>阈值</strong>时，就自动加配主存实页数，反之减少。以此使主存的命中率和使用率都得到提高。</p><h3 id="提高主存命中率" tabindex="-1"><a class="header-anchor" href="#提高主存命中率"><span>提高主存命中率</span></a></h3><h4 id="影响主存命中率的因素" tabindex="-1"><a class="header-anchor" href="#影响主存命中率的因素"><span>影响主存命中率的因素 *</span></a></h4><ul><li>程序在执行过程中的<strong>页地址流</strong>分布情况。</li><li><strong>页面大小</strong></li><li><strong>主存容量</strong></li><li><strong>页面替换算法</strong></li><li><strong>页面调度算法</strong></li></ul><p>如：页式虚拟存储器中，影响命中率的因素除<strong>替换算法</strong>外，还有地址流、<strong>页面大小</strong>、主存容量等。 <strong>^</strong></p><h4 id="提高主存命中率的办法" tabindex="-1"><a class="header-anchor" href="#提高主存命中率的办法"><span>提高主存命中率的办法</span></a></h4><p>利用<strong>页面大小</strong>提高命中率：</p><blockquote><p>【图】页面大小与命中率的关系图。</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215182001546.png" alt="image-20230215182001546" tabindex="0" loading="lazy"><figcaption>image-20230215182001546</figcaption></figure></blockquote><p>利用<strong>主存容量</strong>提供命中率</p><blockquote><p>【图】主存容量与命中率的关系</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215182138990.png" alt="image-20230215182138990" tabindex="0" loading="lazy"><figcaption>image-20230215182138990</figcaption></figure></blockquote><p>利用<strong>页面调度方式</strong>提高命中率</p><ul><li>请求式：使用时，再调入主存。</li><li>预取式：程序重启前，先将上一次停止运行前一段时间内用到页面调入到主存，然后再启动程序。优点：避免程序重启后，发生页面失效；缺点：调入的页很可能用不上，导致时间浪费了，空间被占了。</li></ul><h2 id="段页式虚拟存储器" tabindex="-1"><a class="header-anchor" href="#段页式虚拟存储器"><span>段页式虚拟存储器</span></a></h2><p>段页式存储即把<strong>主存</strong>机械地等分成固定大小的页，程序按模块<strong>分段</strong>，每个段又分成与主存页面大小相同的页。</p><h3 id="地址映像-2" tabindex="-1"><a class="header-anchor" href="#地址映像-2"><span>地址映像</span></a></h3><blockquote><p>【图】段页式虚拟存储器的地址映像</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212135618065.png" alt="image-20230212135618065" tabindex="0" loading="lazy"><figcaption>image-20230212135618065</figcaption></figure></blockquote><h3 id="地址变换-2" tabindex="-1"><a class="header-anchor" href="#地址变换-2"><span>地址变换</span></a></h3><blockquote><p>【图】段页式虚拟存储器的地址变换过程</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212135956576.png" alt="image-20230212135956576" tabindex="0" loading="lazy"><figcaption>image-20230212135956576</figcaption></figure></blockquote><h1 id="高速缓冲-cache-存储器" tabindex="-1"><a class="header-anchor" href="#高速缓冲-cache-存储器"><span>高速缓冲（Cache）存储器</span></a></h1><p>高速缓冲存储器：弥补主存<strong>速度</strong>不足，在 CPU 和主存之间设置一个<strong>高速</strong>、<strong>小容量</strong>的 Cache ，构成【 Cache -主存】存储层次，使之从 CPU 角度看，速度接近于 Cache ，容量却是主存。</p><blockquote><p>【图】Cache - 主存存储层次图</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215183943952.png" alt="image-20230215183943952" tabindex="0" loading="lazy"><figcaption>image-20230215183943952</figcaption></figure></blockquote><p>当我们谈Cache存储系统时，我们从4个方面谈：</p><ul><li>（数据）如何放？3种映像方式（全、直、组相联映像）</li><li>（数据）如何找？根据地址找（块号、块内地址等）</li><li>（数据）如何写？写直达法、写回法</li><li>（数据）如何换？LRU等替换算法</li></ul><h2 id="地址映像与变换" tabindex="-1"><a class="header-anchor" href="#地址映像与变换"><span>地址映像与变换</span></a></h2><ul><li><a href="https://www.icourse163.org/learn/HUST-1207109824?tid=1207462224#/learn/content?type=detail&amp;id=1214348301&amp;cid=1217926716" target="_blank" rel="noopener noreferrer">全、直、组相联地址映像与变换的过程-华中科技大学</a></li></ul><p>【Cache-主存】的<strong>地址映像</strong>是指把主存中的程序按照某种规则装入到cache中，并建立<strong>主存地址</strong>与<strong>cache地址</strong>之间的对应关系。</p><p>【Cache-主存】的地址<strong>映像方式</strong>有 3种，<u><strong>简记：全直组</strong></u> 。 ^</p><p>【Cache-主存】的<strong>地址变换</strong>是指当程序装入到cache后，在程序运行过程中，把<strong>主存地址</strong>变换成<strong>cache地址</strong>。 ^</p><p><b style="color:red;">选取地址映像方法的需要考虑哪些因素？</b></p><ol><li>硬件是否速度高、价格低、易实现</li><li>块冲突概率是否低</li><li>Cache空间利用率是否高</li></ol><p><b style="color:red;">3种地址映像和变换分别是什么？</b> <strong><u>简记：全直组</u></strong></p><ol><li>全相联映像和变换</li><li>直接相联映像和变换</li><li><strong>组相联映像和变换</strong></li></ol><h3 id="全相联地址映像与变换" tabindex="-1"><a class="header-anchor" href="#全相联地址映像与变换"><span>全相联地址映像与变换</span></a></h3><h4 id="地址的映像规则" tabindex="-1"><a class="header-anchor" href="#地址的映像规则"><span>地址的映像规则</span></a></h4><p>主存的任意一块可以映像到 Cache 中的任意一块。 <strong><u>简记：多对多映射</u></strong></p>',40),B=s("blockquote",null,[s("p",null,[a("【图】cache-主存的全相联地址映像，映像关系有 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"C"),s("mi",null,"b")]),s("mo",null,"×"),s("msub",null,[s("mi",null,"M"),s("mi",null,"b")])]),s("annotation",{encoding:"application/x-tex"},"C_b × M_b")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"b")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"b")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 种")]),s("figure",null,[s("img",{src:"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215184802915.png",alt:"image-20230215184802915",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image-20230215184802915")])],-1),_=n('<h4 id="地址的变换过程" tabindex="-1"><a class="header-anchor" href="#地址的变换过程"><span>地址的变换过程</span></a></h4><blockquote><p>【图】cache-主存的地址变换过程</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215185049012.png" alt="image-20230215185049012" tabindex="0" loading="lazy"><figcaption>image-20230215185049012</figcaption></figure></blockquote><h4 id="优缺点-2" tabindex="-1"><a class="header-anchor" href="#优缺点-2"><span>优缺点</span></a></h4><p>优点：块冲突概率低，空间利用率高。</p><p>缺点：相联存储成本高，查表速度慢。</p><h3 id="直接相联地址映像与变换" tabindex="-1"><a class="header-anchor" href="#直接相联地址映像与变换"><span>直接相联地址映像与变换</span></a></h3><h4 id="地址的映像规则-1" tabindex="-1"><a class="header-anchor" href="#地址的映像规则-1"><span>地址的映像规则</span></a></h4><p>主存储器中一块只能映像到 Cache 的一个特定的块中。 <strong><u>简记：一对一映射</u></strong></p><blockquote><p>【图】直接映像方式的地址映像规则</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215185440351.png" alt="image-20230215185440351" tabindex="0" loading="lazy"><figcaption>image-20230215185440351</figcaption></figure></blockquote><h4 id="地址的变换过程-1" tabindex="-1"><a class="header-anchor" href="#地址的变换过程-1"><span>地址的变换过程</span></a></h4><blockquote><p>【图】直接相联地址变换过程</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215185854589.png" alt="image-20230215185854589" tabindex="0" loading="lazy"><figcaption>image-20230215185854589</figcaption></figure></blockquote><h4 id="优缺点-3" tabindex="-1"><a class="header-anchor" href="#优缺点-3"><span>优缺点</span></a></h4><p>优点：硬件实现简单，不需要相联访问存储器；访问速度快，不需要地址变换。</p><p>缺点：块冲突概率高。</p><h3 id="组相联地址映像与变换" tabindex="-1"><a class="header-anchor" href="#组相联地址映像与变换"><span>组相联地址映像与变换</span></a></h3><h4 id="地址映像规则" tabindex="-1"><a class="header-anchor" href="#地址映像规则"><span>地址映像规则</span></a></h4><ul><li>主存和Cache按同样大小划分成块和组。</li><li>主存和Cache按照**“组间直，组内全”**的原则进行映像。</li></ul><blockquote><p>【图】组相联地址映像方式</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_F31E18E348B8-1.jpeg" alt="IMG_F31E18E348B8-1" tabindex="0" loading="lazy"><figcaption>IMG_F31E18E348B8-1</figcaption></figure></blockquote><h4 id="地址变换过程" tabindex="-1"><a class="header-anchor" href="#地址变换过程"><span>地址变换过程</span></a></h4><blockquote><p>【图】组相联映像的地址变换过程</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215191236572.png" alt="image-20230215191236572" tabindex="0" loading="lazy"><figcaption>image-20230215191236572</figcaption></figure></blockquote><h4 id="优缺点-4" tabindex="-1"><a class="header-anchor" href="#优缺点-4"><span>优缺点</span></a></h4><p>优点：块的冲突概率低，块的利用率大幅度提高，块失效率明显降低。</p><p>缺点：实现难度和造价要比直接映像方式高。</p><h2 id="cache-替换算法及其实现" tabindex="-1"><a class="header-anchor" href="#cache-替换算法及其实现"><span>Cache 替换算法及其实现</span></a></h2><p>Cache 替换算法主要用于<strong>组相联、段相联</strong>中，而直接相联映像是<strong>不需要</strong>替换算法的，全相联映像的替换算法<strong>最复杂</strong>。 替换算法主要用来<strong>记录和管理块号</strong>，并在合适的条件下完成块号的替换。Cache 替换算法是用<strong>硬件</strong>实现的，这样可以减少 CPU 空等时间，确保 Cache 调块时间为微秒级。</p><h3 id="轮换法及其实现" tabindex="-1"><a class="header-anchor" href="#轮换法及其实现"><span>轮换法及其实现</span></a></h3><p>轮换法一般用在组相联映像方式中，有 2 种方式：</p><ol><li>每块一个计数器</li><li>每组一个计数器</li></ol><h4 id="每块一个计数器" tabindex="-1"><a class="header-anchor" href="#每块一个计数器"><span>每块一个计数器</span></a></h4><p>计数规则：新装入或替换的块，其计数器清零，同组其他块的计数器都加 1</p><blockquote><p>【图】每块一个计数器</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216183049198.png" alt="image-20230216183049198" tabindex="0" loading="lazy"><figcaption>image-20230216183049198</figcaption></figure><p>如：</p><p>装入<code>块00</code>使，<code>块00</code>的计数器清零，其余加1</p><p>装入<code>块01</code>时，<code>块01</code>的计数器清零，其余加1</p></blockquote><h4 id="每组一个计数器" tabindex="-1"><a class="header-anchor" href="#每组一个计数器"><span>每组一个计数器</span></a></h4><p>替换与计数规则：本组有替换时，计数器加1。计数器的值为待被替换的块号</p><blockquote><p>NOVA3 机的 Cache 采用组相联映像方式，Cache 每组的块数为 8，每组设置了一个 3 位 计数器。在需要替换时，计数器的值加1，用计数器的值直接作为被替换块的块号。</p><p>如 000 + 1 = 001，则被替换的块的块号位001</p></blockquote><h4 id="优缺点-5" tabindex="-1"><a class="header-anchor" href="#优缺点-5"><span>优缺点</span></a></h4><p>优点：实现简单，能够利用历史上的块地址流情况。</p><p>缺点：没有利用到程序的局部性特点。（比较致命）</p><h3 id="lru-算法及其实现" tabindex="-1"><a class="header-anchor" href="#lru-算法及其实现"><span>LRU 算法及其实现 *</span></a></h3><p>为每一块设置一个计数器，计数器长度=块号字段长度</p><p>规则：新装入或替换的块，计数器清零，同组中其他块的计数器加1。命中的块计数器清零，需替换时，替换掉同组中取计数器值最大的块。</p><blockquote><p>IBM 370/165 的 Cache 采用组相联映象方式。</p><p><strong>每组有4块</strong>，为实现 LRU 替换算法，在块表中为每一块设置一个 <strong>2 位的计数器</strong>。在访问 Cache 的过程中，块的装入、替换及命中时，计数器的工作情况：</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_80C3F397D371-1.jpeg" alt="IMG_80C3F397D371-1" tabindex="0" loading="lazy"><figcaption>IMG_80C3F397D371-1</figcaption></figure></blockquote><h4 id="优缺点-6" tabindex="-1"><a class="header-anchor" href="#优缺点-6"><span>优缺点</span></a></h4><p>优点：命中率高，能够比较正确地利用<strong>程序的局部性</strong>特点，充分地利用历史上块地址流的分布情况；是一种堆栈型算法，随着组内块数增加，命中率单调上升。</p><p>缺点：控制逻辑复杂。</p><h3 id="比较对法及其实现" tabindex="-1"><a class="header-anchor" href="#比较对法及其实现"><span>比较对法及其实现 -</span></a></h3><h3 id="堆栈法及其实现" tabindex="-1"><a class="header-anchor" href="#堆栈法及其实现"><span>堆栈法及其实现 -</span></a></h3><h2 id="cache-性能分析" tabindex="-1"><a class="header-anchor" href="#cache-性能分析"><span>Cache 性能分析 * **</span></a></h2>',47),j=s("blockquote",null,[s("p",null,"【图】 Cache 加速比公式："),s("figure",null,[s("img",{src:"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216190306201.png",alt:"image-20230216190306201",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image-20230216190306201")]),s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"T_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" ： 主存访问周期")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mi",null,"c")])]),s("annotation",{encoding:"application/x-tex"},"T_c")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"c")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" ：cache 访问周期")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"T")]),s("annotation",{encoding:"application/x-tex"},"T")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T")])])]),a(" : cache 等效访问周期")]),s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"H")]),s("annotation",{encoding:"application/x-tex"},"H")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H")])])]),a("： 命中率")])]),s("p",null,[a("加速比 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"S"),s("mi",null,"p")])]),s("annotation",{encoding:"application/x-tex"},"S_p")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9694em","vertical-align":"-0.2861em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0576em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"p")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])])])])]),a(" 与 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"H")]),s("annotation",{encoding:"application/x-tex"},"H")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H")])])]),a(" 的关系：")]),s("figure",null,[s("img",{src:"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216190509570.png",alt:"image-20230216190509570",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image-20230216190509570")]),s("p",null,[a("结论："),s("strong",null,"提高加速比"),a("的最好途径是"),s("strong",null,"提高命中率"),a("。")])],-1),C=n('<h3 id="提高-c-的命中率" tabindex="-1"><a class="header-anchor" href="#提高-c-的命中率"><span>提高 C 的命中率</span></a></h3><h4 id="影响-c-命中率的因素" tabindex="-1"><a class="header-anchor" href="#影响-c-命中率的因素"><span>影响 C 命中率的因素 *</span></a></h4><ul><li>程序执行过程中的<strong>地址流分布</strong>情况</li><li>当 cache 发生块失效时，使用的<strong>替换算法</strong></li><li><strong>cache 容量</strong></li><li><strong>在相联映像中，块的大小和分组的数目</strong></li><li><strong>cache 取方法</strong></li></ul><p>因此，适当选择好 Cache 的容量、块的大小、组相联的组数和组内块数，是可以保证有较高的命中率。 ^</p><p><strong>Cache 容量对命中率的影响</strong></p>',5),L=s("blockquote",null,[s("p",null,"【图】cache 容量与命中率的关系"),s("figure",null,[s("img",{src:"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216190750180.png",alt:"image-20230216190750180",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image-20230216190750180")]),s("p",null,[a("结论：随着容量的增大而增大，大到一定程度后，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"H")]),s("annotation",{encoding:"application/x-tex"},"H")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H")])])]),a(" 提高变慢。")])],-1),q=n('<p><strong>Cache 块大小对命中率的影响</strong></p><blockquote><p>【图】Cache 块大小对命中率的影响</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216191045024.png" alt="image-20230216191045024" tabindex="0" loading="lazy"><figcaption>image-20230216191045024</figcaption></figure><p>结论：在<strong>组相联映像</strong>方式中，块大小对命中率非常敏感：块很小时。命中率很低，随着块大小的增加命中率也增加，但存在一个极大值。当块大小增大到越过极大值时，随着块大小的增加命中率将趋于 0 。</p></blockquote><p><strong>Cache 组数对命中率的影响</strong></p><blockquote><p>结论：组数增，命中率降。</p></blockquote><p><strong>Cache 预取法对命中率的影响</strong></p><blockquote><p>结论：采用预取法不一定能提高命中率。</p></blockquote><h4 id="提高-c-命中率的方法" tabindex="-1"><a class="header-anchor" href="#提高-c-命中率的方法"><span>提高 C 命中率的方法</span></a></h4><ul><li><p><a href="https://www.icourse163.org/learn/HUST-1207109824?tid=1207462224#/learn/content?type=detail&amp;id=1214344418&amp;cid=1217964267&amp;replay=true" target="_blank" rel="noopener noreferrer">华中科大-谢长生：降低 Cache 不命中率</a></p></li><li><p><a href="https://www.icourse163.org/learn/HUST-1207109824?tid=1207462224#/learn/content?type=detail&amp;id=1214344418&amp;sm=1" target="_blank" rel="noopener noreferrer">华中科大-谢长生：减少 Cache 不命中开销</a></p></li></ul><h2 id="cache-数据一致性" tabindex="-1"><a class="header-anchor" href="#cache-数据一致性"><span>Cache 数据一致性</span></a></h2><p>通过一张图，理解Cache 与主存数据不一致的根本原因：</p><blockquote><p>【图】造成 Cache 与 主存 数据不一致的原因：</p><ul><li>CPU 写 Cache 时，没有立即写主存</li><li>I/O 写主存时，没有立即写 Cache</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_1A4D8D23F10B-1.jpeg" alt="IMG_1A4D8D23F10B-1" tabindex="0" loading="lazy"><figcaption>IMG_1A4D8D23F10B-1</figcaption></figure></blockquote><h3 id="cache-的更新算法" tabindex="-1"><a class="header-anchor" href="#cache-的更新算法"><span>Cache 的更新算法</span></a></h3><ul><li><strong>写直达法：利用 CPU 与主存之间的通路，将数据写入 Cache 和主存中。</strong></li><li><strong>写回法</strong>：执行写操作时，<strong>只写入 Cache</strong> ；当发生<strong>替换</strong>时，先将 <strong>Cache</strong> 块写入<strong>主存</strong>，再调入<strong>新块</strong>。</li></ul><p><strong>写直达法和写回法的比较</strong>： 从可靠性、通信量、复杂性、硬件实现代价进行比较</p><p>① 从<strong>可靠性</strong>的角度比较，写直达法优于写回法。</p><p>因为其能够保证cache中的数据始终是主存的副本，即使cache发生了错误，也能从主存中得到修正。</p><p>② 从<strong>主存通信量</strong>的角度比较，写回法少于写直达法。</p><p>写<strong>回</strong>法每次只写一<strong>块</strong>，而写<strong>直</strong>达法每次写一个<strong>字</strong>。<strong>（大小关系：块&gt;字）</strong> <strong><u>简记：回块直字</u></strong></p><blockquote><p>【例】通信量到比较</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216193348340.png" alt="image-20230216193348340" tabindex="0" loading="lazy"><figcaption>image-20230216193348340</figcaption></figure></blockquote><p>③ 从<strong>控制复杂性</strong>的角度比较，写直达法比写回法简单。</p><p>根据”回块直字“的特点可知，写回法需为每一块设置一个修改位，并需提供复杂的校验方式或校正方式。写直达法则不需要，只需采用简单的奇偶校验即可。</p><p>④ 从<strong>硬件实现代价</strong>的角度比较，写回法比写直达法好。</p><p>写回法不需要硬件支持，而写直达法需要硬件支持。</p><h2 id="cache-预取算法" tabindex="-1"><a class="header-anchor" href="#cache-预取算法"><span>Cache 预取算法</span></a></h2><ul><li>按需取。出现不命中时，才把需要的块取到cache中。</li><li><strong>恒预取</strong>。不论是否命中，都把下一块取到cache中。</li><li><strong>不命中预取</strong>。出现不命中时，把本块和下一块一起取到cache中。</li></ul><p>主要考虑因素：命中率是否提高；cache与主存间的通信量。</p>',26),H=s("blockquote",null,[s("p",null,[a("恒预取法，可使 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"!"),s("mi",null,"H")]),s("annotation",{encoding:"application/x-tex"},"!H")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mclose"},"!"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H")])])]),a(" 降低 75%~85%；")]),s("p",null,[a("不命中预取法，可使 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"!"),s("mi",null,"H")]),s("annotation",{encoding:"application/x-tex"},"!H")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mclose"},"!"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H")])])]),a(" 降低 30%~40%。")])],-1),T=s("h1",{id:"虚和c的比较",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#虚和c的比较"},[s("span",null,"虚和C的比较")])],-1),F=s("figure",null,[s("img",{src:"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215184110228.png",alt:"image-20230215184110228",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image-20230215184110228")],-1),U=[m,g,r,p,h,c,o,d,u,x,v,z,y,b,f,w,k,M,B,_,j,C,L,q,H,T,F];function I(E,G){return l(),e("div",null,U)}const D=t(i,[["render",I],["__file"," 4 存储体系.html.vue"]]),R=JSON.parse('{"path":"/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/%204%20%E5%AD%98%E5%82%A8%E4%BD%93%E7%B3%BB.html","title":"存储体系","lang":"zh-CN","frontmatter":{"title":"存储体系","order":4,"icon":"file","category":["系统结构","理论基础"],"description":"存储体系 * 华中科技大学-计算机系统结构 存储体系概念 定义、分支、依据 主要指标参数的计算 虚拟存储体系 3 种虚拟管理方式的原理、地址映像规则、影响表机构、地址变换过程、各自优缺点 段页式虚拟存储器中，由虚地址计算实地址；根据映像表内容计算主存实地址；判断段失效、页失效、保护失效 页式虚拟存储器中，虚实地址字段的对应关系、地址映像规则；由虚地址查...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/yibu_zzn/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/%204%20%E5%AD%98%E5%82%A8%E4%BD%93%E7%B3%BB.html"}],["meta",{"property":"og:site_name","content":"郑振宁的数字资产中心"}],["meta",{"property":"og:title","content":"存储体系"}],["meta",{"property":"og:description","content":"存储体系 * 华中科技大学-计算机系统结构 存储体系概念 定义、分支、依据 主要指标参数的计算 虚拟存储体系 3 种虚拟管理方式的原理、地址映像规则、影响表机构、地址变换过程、各自优缺点 段页式虚拟存储器中，由虚地址计算实地址；根据映像表内容计算主存实地址；判断段失效、页失效、保护失效 页式虚拟存储器中，虚实地址字段的对应关系、地址映像规则；由虚地址查..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212201704104.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T02:36:39.000Z"}],["meta",{"property":"article:author","content":"郑振宁"}],["meta",{"property":"article:modified_time","content":"2024-04-12T02:36:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"存储体系\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212201704104.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_9605.jpeg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212201748375.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230322220917610.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230322223013764.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216195451765.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230322221154535.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216195611689.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216195632666.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212123046510.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212123323599.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212123617425.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212121410491.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212121439209.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212123752183.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_9424.jpeg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212124946461.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212124935827.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212130708243.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212130848052.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212130928879.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212131145609.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212130951283.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212131106510.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212132840646.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212133514178.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212134701081.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212135023209.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212203934288.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_9425.jpeg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215182001546.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215182138990.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212135618065.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230212135956576.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215183943952.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215184802915.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215185049012.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215185440351.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215185854589.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_F31E18E348B8-1.jpeg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215191236572.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216183049198.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_80C3F397D371-1.jpeg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216190306201.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216190509570.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216190750180.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216191045024.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_1A4D8D23F10B-1.jpeg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230216193348340.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230215184110228.png\\"],\\"dateModified\\":\\"2024-04-12T02:36:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"郑振宁\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"简答题·全","slug":"简答题·全","link":"#简答题·全","children":[]},{"level":2,"title":"应用题·全","slug":"应用题·全","link":"#应用题·全","children":[{"level":3,"title":"提高C的等效访问速度（命中率H）**","slug":"提高c的等效访问速度-命中率h","link":"#提高c的等效访问速度-命中率h","children":[]},{"level":3,"title":"单体交叉存储器转移概率","slug":"单体交叉存储器转移概率","link":"#单体交叉存储器转移概率","children":[]},{"level":3,"title":"Cache 存储器替换","slug":"cache-存储器替换","link":"#cache-存储器替换","children":[]},{"level":3,"title":"虚拟存储器替换","slug":"虚拟存储器替换","link":"#虚拟存储器替换","children":[]},{"level":3,"title":"存储体系的性能参数","slug":"存储体系的性能参数","link":"#存储体系的性能参数","children":[]}]},{"level":2,"title":"定义 ·","slug":"定义-·","link":"#定义-·","children":[]},{"level":2,"title":"基本要求 *","slug":"基本要求","link":"#基本要求","children":[]},{"level":2,"title":"并行主存系统**","slug":"并行主存系统","link":"#并行主存系统","children":[{"level":3,"title":"每周期能访问的平均字数 *","slug":"每周期能访问的平均字数","link":"#每周期能访问的平均字数","children":[]}]},{"level":2,"title":"构成依据（局部性）**","slug":"构成依据-局部性","link":"#构成依据-局部性","children":[]},{"level":2,"title":"性能参数","slug":"性能参数","link":"#性能参数","children":[{"level":3,"title":"计算价格","slug":"计算价格","link":"#计算价格","children":[]},{"level":3,"title":"计算命中率","slug":"计算命中率","link":"#计算命中率","children":[]},{"level":3,"title":"计算平均访问时间 **","slug":"计算平均访问时间","link":"#计算平均访问时间","children":[]},{"level":3,"title":"计算访问效率 **","slug":"计算访问效率","link":"#计算访问效率","children":[]}]},{"level":2,"title":"存储管理方式","slug":"存储管理方式","link":"#存储管理方式","children":[]},{"level":2,"title":"段式虚拟存储器","slug":"段式虚拟存储器","link":"#段式虚拟存储器","children":[{"level":3,"title":"地址映像","slug":"地址映像","link":"#地址映像","children":[]},{"level":3,"title":"地址变换","slug":"地址变换","link":"#地址变换","children":[]},{"level":3,"title":"优缺点","slug":"优缺点","link":"#优缺点","children":[]}]},{"level":2,"title":"页式虚拟存储器 * *","slug":"页式虚拟存储器","link":"#页式虚拟存储器","children":[{"level":3,"title":"地址映像","slug":"地址映像-1","link":"#地址映像-1","children":[]},{"level":3,"title":"地址变换","slug":"地址变换-1","link":"#地址变换-1","children":[]},{"level":3,"title":"优缺点","slug":"优缺点-1","link":"#优缺点-1","children":[]},{"level":3,"title":"页面替换算法 * ^","slug":"页面替换算法","link":"#页面替换算法","children":[]},{"level":3,"title":"堆栈型替换算法 * *","slug":"堆栈型替换算法","link":"#堆栈型替换算法","children":[]},{"level":3,"title":"页面失效频率（PFF）算法","slug":"页面失效频率-pff-算法","link":"#页面失效频率-pff-算法","children":[]},{"level":3,"title":"提高主存命中率","slug":"提高主存命中率","link":"#提高主存命中率","children":[]}]},{"level":2,"title":"段页式虚拟存储器","slug":"段页式虚拟存储器","link":"#段页式虚拟存储器","children":[{"level":3,"title":"地址映像","slug":"地址映像-2","link":"#地址映像-2","children":[]},{"level":3,"title":"地址变换","slug":"地址变换-2","link":"#地址变换-2","children":[]}]},{"level":2,"title":"地址映像与变换","slug":"地址映像与变换","link":"#地址映像与变换","children":[{"level":3,"title":"全相联地址映像与变换","slug":"全相联地址映像与变换","link":"#全相联地址映像与变换","children":[]},{"level":3,"title":"直接相联地址映像与变换","slug":"直接相联地址映像与变换","link":"#直接相联地址映像与变换","children":[]},{"level":3,"title":"组相联地址映像与变换","slug":"组相联地址映像与变换","link":"#组相联地址映像与变换","children":[]}]},{"level":2,"title":"Cache 替换算法及其实现","slug":"cache-替换算法及其实现","link":"#cache-替换算法及其实现","children":[{"level":3,"title":"轮换法及其实现","slug":"轮换法及其实现","link":"#轮换法及其实现","children":[]},{"level":3,"title":"LRU 算法及其实现 *","slug":"lru-算法及其实现","link":"#lru-算法及其实现","children":[]},{"level":3,"title":"比较对法及其实现 -","slug":"比较对法及其实现","link":"#比较对法及其实现","children":[]},{"level":3,"title":"堆栈法及其实现 -","slug":"堆栈法及其实现","link":"#堆栈法及其实现","children":[]}]},{"level":2,"title":"Cache 性能分析 * **","slug":"cache-性能分析","link":"#cache-性能分析","children":[{"level":3,"title":"提高 C 的命中率","slug":"提高-c-的命中率","link":"#提高-c-的命中率","children":[]}]},{"level":2,"title":"Cache 数据一致性","slug":"cache-数据一致性","link":"#cache-数据一致性","children":[{"level":3,"title":"Cache 的更新算法","slug":"cache-的更新算法","link":"#cache-的更新算法","children":[]}]},{"level":2,"title":"Cache 预取算法","slug":"cache-预取算法","link":"#cache-预取算法","children":[]}],"git":{"createdTime":1712889399000,"updatedTime":1712889399000,"contributors":[{"name":"一步","email":"zzn_workmail@163.com","commits":1}]},"readingTime":{"minutes":22.56,"words":6767},"filePathRelative":"系统结构/ 4 存储体系.md","localizedDate":"2024年4月12日","excerpt":"\\n<p><a href=\\"https://www.icourse163.org/course/HUST-1207109824?tid=1207462224\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">华中科技大学-计算机系统结构</a></p>\\n<ol>\\n<li>存储体系概念\\n<ol>\\n<li>定义、分支、依据</li>\\n<li>主要指标参数的计算</li>\\n</ol>\\n</li>\\n<li>虚拟存储体系\\n<ol>\\n<li>3 种虚拟管理方式的原理、地址映像规则、影响表机构、地址变换过程、各自优缺点</li>\\n<li><strong>段页式虚拟存储器</strong>中，<strong>由虚地址计算实地址</strong>；根据映像表内容计算主存实地址；判断段失效、页失效、保护失效</li>\\n<li>页式虚拟存储器中，虚实地址字段的对应关系、地址映像规则；由虚地址查映像表计算实主存地址，或判断页失效</li>\\n<li>用 <strong>FIFO</strong>、<strong>LRU</strong>、OPT 算法页面替换的过程模拟，计算命中率</li>\\n<li>堆栈型替换算法定义、种类；给出程序运行时的虚页地址流用 LRU 替换算法进行堆栈模拟处理，求不同实页数的命中率</li>\\n<li>PFF 替换算法的原理；二道程序给出各自程序运行中得虚页地址流，合理分配给它们的实主存页数，使系统效率最高</li>\\n<li>分析虚拟存储器得页面大小、分配给主存容量与主存命中率的变化趋势，给出综合评估和改进虚拟存储器性能得办法</li>\\n</ol>\\n</li>\\n<li>Cache 存储器</li>\\n<li>三级存储体系的组织</li>\\n</ol>","autoDesc":true}');export{D as comp,R as data};
