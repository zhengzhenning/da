import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as n}from"./app-5TFomsNA.js";const l={};function t(h,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h2><p>学习变量，要从4个方面学：</p><ol><li>语法形式</li><li>存储方式</li><li>生命周期</li><li>默认值</li></ol><h3 id="成员变量" tabindex="-1"><a class="header-anchor" href="#成员变量"><span>成员变量</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 成员变量 sex</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> sex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="局部变量" tabindex="-1"><a class="header-anchor" href="#局部变量"><span>局部变量</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> method</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(){</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">		// 局部变量 sex</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">		String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> sex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="静态变量" tabindex="-1"><a class="header-anchor" href="#静态变量"><span>静态变量</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> A</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // 静态常量</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> log</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;***&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">	</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2><p>研究方法，主要研究方法的2个方面：</p><ol><li>方法的参数与返回值</li><li>方法签名的设计</li></ol><h1 id="实践原则" tabindex="-1"><a class="header-anchor" href="#实践原则"><span>实践原则</span></a></h1><p>《Effective Java》关于方法的最佳实践中给出了 8 条建议，其中有 4 条在日常开发中应当作为原则践行：</p><p>原则1：参数有效性的检查</p><p>原则2：参数的保护性拷贝</p><p>原则3：方法签名设计</p><p>原则4：方法返回值不要直接返回null</p><h1 id="重载与重写" tabindex="-1"><a class="header-anchor" href="#重载与重写"><span>重载与重写</span></a></h1><p>重载与重写的区别：简单说，<strong>重写</strong>发生在<strong>父子继承关系</strong>中；<strong>重载</strong>是方法名相同，参数不同。<strong>最典型的重载方法：构造器</strong>。</p><p>重载与重写调用时机的不同，导致了重载不慎，后果不堪。重载机制是在<strong>编译时</strong>决定调用哪个<strong>重载</strong>方法；重写机制在<strong>运行时</strong>决定调用哪个<strong>重写</strong>方法。运行时的好处能够具体到真正具体实例，编译时就不行，编译时是根据显式类型来确定实例的具体类型，不具多态特性。</p><h2 id="方法重载" tabindex="-1"><a class="header-anchor" href="#方法重载"><span>方法重载 *</span></a></h2><p>定义：重载，即同名不同参，比如典型的StringBuilder类：</p><p>编译器会根据参数类型、参数列表匹配最佳的方法。</p><h2 id="实践原则-1" tabindex="-1"><a class="header-anchor" href="#实践原则-1"><span>实践原则</span></a></h2><p>原则1：谨慎重载，重载不慎，API致为难用</p><p>原则2：实参列表你呢个唯一确定具体调用的方法</p><p>原则3：重载方法的返回类型不受限制</p><h2 id="方法重写" tabindex="-1"><a class="header-anchor" href="#方法重写"><span>方法重写 *</span></a></h2><p><strong>方法重写原则</strong></p><ol><li>子类方法覆盖父类方法，必须要保证<strong>访问权限：子类父类</strong>。</li><li>子类方法覆盖父类方法，<strong>返回值类型、函数名和参数列表都要一模一样</strong>。</li></ol>`,31)]))}const d=s(l,[["render",t],["__file","1核心基础知识.html.vue"]]),k=JSON.parse('{"path":"/Java%E7%AC%94%E8%AE%B0/1%E6%A0%B8%E5%BF%83%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html","title":"核心基础知识","lang":"zh-CN","frontmatter":{"author":"振振","title":"核心基础知识","order":1,"icon":"file","date":"2022-10-12T00:00:00.000Z","category":["Java"],"description":"变量 学习变量，要从4个方面学： 语法形式 存储方式 生命周期 默认值 成员变量 局部变量 静态变量 方法 研究方法，主要研究方法的2个方面： 方法的参数与返回值 方法签名的设计 实践原则 《Effective Java》关于方法的最佳实践中给出了 8 条建议，其中有 4 条在日常开发中应当作为原则践行： 原则1：参数有效性的检查 原则2：参数的保护性...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/yibu_zzn/Java%E7%AC%94%E8%AE%B0/1%E6%A0%B8%E5%BF%83%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html"}],["meta",{"property":"og:site_name","content":"郑振宁"}],["meta",{"property":"og:title","content":"核心基础知识"}],["meta",{"property":"og:description","content":"变量 学习变量，要从4个方面学： 语法形式 存储方式 生命周期 默认值 成员变量 局部变量 静态变量 方法 研究方法，主要研究方法的2个方面： 方法的参数与返回值 方法签名的设计 实践原则 《Effective Java》关于方法的最佳实践中给出了 8 条建议，其中有 4 条在日常开发中应当作为原则践行： 原则1：参数有效性的检查 原则2：参数的保护性..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-26T09:32:58.000Z"}],["meta",{"property":"article:author","content":"振振"}],["meta",{"property":"article:published_time","content":"2022-10-12T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-26T09:32:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"核心基础知识\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-10-12T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-26T09:32:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"振振\\"}]}"]]},"headers":[{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[{"level":3,"title":"成员变量","slug":"成员变量","link":"#成员变量","children":[]},{"level":3,"title":"局部变量","slug":"局部变量","link":"#局部变量","children":[]},{"level":3,"title":"静态变量","slug":"静态变量","link":"#静态变量","children":[]}]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[]},{"level":2,"title":"方法重载 *","slug":"方法重载","link":"#方法重载","children":[]},{"level":2,"title":"实践原则","slug":"实践原则-1","link":"#实践原则-1","children":[]},{"level":2,"title":"方法重写 *","slug":"方法重写","link":"#方法重写","children":[]}],"git":{"createdTime":1710839855000,"updatedTime":1711445578000,"contributors":[{"name":"一步","email":"zzn_workmail@163.com","commits":1}]},"readingTime":{"minutes":1.83,"words":549},"filePathRelative":"Java笔记/1核心基础知识.md","localizedDate":"2022年10月12日","excerpt":"<h2>变量</h2>\\n<p>学习变量，要从4个方面学：</p>\\n<ol>\\n<li>语法形式</li>\\n<li>存储方式</li>\\n<li>生命周期</li>\\n<li>默认值</li>\\n</ol>\\n<h3>成员变量</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"java\\" data-title=\\"java\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">class</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> A</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">  // 成员变量 sex</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">\\tprivate</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> String</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\"> sex</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,k as data};
