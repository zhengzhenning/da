import{_ as a,o as e,c as t,e as n}from"./app-B7PI1MIx.js";const c={},s=n(`<h1 id="异常" tabindex="-1"><a class="header-anchor" href="#异常"><span>异常</span></a></h1><p>异常，研究 2 个方面：</p><ol><li>受检与非受检的区别</li><li><code>try-catch-finally</code> 与 <code>try-catch-resources</code></li></ol><h1 id="受检与非受检" tabindex="-1"><a class="header-anchor" href="#受检与非受检"><span>受检与非受检</span></a></h1><h1 id="try-catch-finally" tabindex="-1"><a class="header-anchor" href="#try-catch-finally"><span>try-catch-finally</span></a></h1><h1 id="try-catch-resources" tabindex="-1"><a class="header-anchor" href="#try-catch-resources"><span>try-catch-resources</span></a></h1><h1 id="实践原则" tabindex="-1"><a class="header-anchor" href="#实践原则"><span>实践原则</span></a></h1><p>原则1：抛异常时，要 <code>new</code> 一个异常对象抛出：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token string">&quot;xxx 为空&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>原则2：抛出异常时，描述信息要言简意赅，如上</p><p>原则3：抛出异常时，尽可能选择具体且符合实际的异常对象，如上。</p><p>原则4：若日志打印了异常，则无必要再抛异常。</p>`,12),o=[s];function r(i,p){return e(),t("div",null,o)}const d=a(c,[["render",r],["__file","5异常处理.html.vue"]]),h=JSON.parse('{"path":"/Java%E7%AC%94%E8%AE%B0/5%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html","title":"异常处理","lang":"zh-CN","frontmatter":{"author":"振振","title":"异常处理","order":5,"icon":"file","date":"2022-11-10T00:00:00.000Z","category":["Java"],"description":"异常 异常，研究 2 个方面： 受检与非受检的区别 try-catch-finally 与 try-catch-resources 受检与非受检 try-catch-finally try-catch-resources 实践原则 原则1：抛异常时，要 new 一个异常对象抛出： 原则2：抛出异常时，描述信息要言简意赅，如上 原则3：抛出异常时，尽可能...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/yibu_zzn/Java%E7%AC%94%E8%AE%B0/5%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html"}],["meta",{"property":"og:site_name","content":"郑振宁的数字资产中心"}],["meta",{"property":"og:title","content":"异常处理"}],["meta",{"property":"og:description","content":"异常 异常，研究 2 个方面： 受检与非受检的区别 try-catch-finally 与 try-catch-resources 受检与非受检 try-catch-finally try-catch-resources 实践原则 原则1：抛异常时，要 new 一个异常对象抛出： 原则2：抛出异常时，描述信息要言简意赅，如上 原则3：抛出异常时，尽可能..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-26T09:32:58.000Z"}],["meta",{"property":"article:author","content":"振振"}],["meta",{"property":"article:published_time","content":"2022-11-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-26T09:32:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"异常处理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-03-26T09:32:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"振振\\"}]}"]]},"headers":[],"git":{"createdTime":1710839855000,"updatedTime":1711445578000,"contributors":[{"name":"一步","email":"zzn_workmail@163.com","commits":1}]},"readingTime":{"minutes":0.5,"words":151},"filePathRelative":"Java笔记/5异常处理.md","localizedDate":"2022年11月10日","excerpt":"\\n<p>异常，研究 2 个方面：</p>\\n<ol>\\n<li>受检与非受检的区别</li>\\n<li><code>try-catch-finally</code> 与 <code>try-catch-resources</code></li>\\n</ol>\\n<h1>受检与非受检</h1>\\n<h1>try-catch-finally</h1>\\n<h1>try-catch-resources</h1>\\n<h1>实践原则</h1>\\n<p>原则1：抛异常时，要 <code>new</code> 一个异常对象抛出：</p>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">NullPointerException</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"xxx 为空\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,h as data};
