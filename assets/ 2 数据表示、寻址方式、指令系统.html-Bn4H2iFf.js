import{_ as t,c as e,o as l,d as a,b as s,e as n}from"./app-BJzxSNpw.js";const i={},g=a('<h1 id="数据表示、寻址方式、指令系统" tabindex="-1"><a class="header-anchor" href="#数据表示、寻址方式、指令系统"><span>数据表示、寻址方式、指令系统</span></a></h1><h2 id="本章涉及的公式有" tabindex="-1"><a class="header-anchor" href="#本章涉及的公式有"><span>本章涉及的公式有</span></a></h2><ol><li>浮点计算公式</li><li>ROM 查表舍入法</li><li>指令格式优化（固、哈、扩）码长公式</li></ol><h1 id="真题" tabindex="-1"><a class="header-anchor" href="#真题"><span>真题</span></a></h1><h2 id="简答题-15" tabindex="-1"><a class="header-anchor" href="#简答题-15"><span>简答题（15） ^</span></a></h2><p>【数据表示篇】</p><p>简述标志符数据表示的概念和标志符数据表示存在的两个问题 <strong>2210</strong></p><p>简述数据描述符和标志符的差别 <strong>1510</strong> <strong>1710</strong> <strong>2110</strong></p><p>简述标志符数据表示的优点 <strong>1610</strong></p><p>简述引入数据表示的原则 <strong>1604</strong></p><p>简述数据表示和数据结构之间的关系及引入高级数据表示的基本原则 <strong>1404</strong></p><p>简述<strong>堆栈计算机</strong>的概念及其特点 <strong>1804</strong> <strong>2204</strong> x</p><p>【寻址技术篇】</p><p>简述程序的静态再定位和动态再定位的含义及实现方法 <strong>1204</strong></p><p>【指令系统篇】</p><p>简述编译程序设计者要求指令系统应具有的特性。 <strong>1810</strong> x</p><p>简述CISC存在的问题。<strong>0504</strong> <strong>0607</strong> <strong>1304</strong> <strong>1504</strong></p><p>简述<strong>面向高级语言的优化</strong>实现改进CISC指令系统的途径。<strong>1710</strong></p><p>简述设计<strong>RISC的基本原则</strong> <strong>2104</strong> <strong>1910</strong> <strong>1904</strong> <strong>1704</strong> <strong>0904</strong> <strong>0504</strong> <strong>0404</strong> x2</p><p>简述设计RISC结构采用的<strong>基本技术</strong>。 <strong>2010</strong> <strong>1204</strong> <strong>1004</strong> <strong>0807</strong> x1</p><p>简述设计RISC结构的<strong>重叠寄存器窗口技术</strong>。1410</p><p>简述<strong>RISC的优缺点</strong>。 1107 1104</p><p>简述<strong>指令字格式优化措施</strong> <strong>1604</strong></p><h2 id="应用题" tabindex="-1"><a class="header-anchor" href="#应用题"><span>应用题</span></a></h2><h3 id="尾数下溢-rom查表舍入法" tabindex="-1"><a class="header-anchor" href="#尾数下溢-rom查表舍入法"><span>尾数下溢-ROM查表舍入法</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154700715.png" alt="image-20230305154700715" tabindex="0" loading="lazy"><figcaption>image-20230305154700715</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230306212427696.png" alt="image-20230306212427696" tabindex="0" loading="lazy"><figcaption>image-20230306212427696</figcaption></figure><h3 id="尾数计算" tabindex="-1"><a class="header-anchor" href="#尾数计算"><span>尾数计算 ** **</span></a></h3><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154420434.png" alt="image-20230305154420434" tabindex="0" loading="lazy"><figcaption>image-20230305154420434</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154540621.png" alt="image-20230305154540621" tabindex="0" loading="lazy"><figcaption>image-20230305154540621</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230402154912066.png" alt="image-20230402154912066" tabindex="0" loading="lazy"><figcaption>image-20230402154912066</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154728498.png" alt="image-20230305154728498" tabindex="0" loading="lazy"><figcaption>image-20230305154728498</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154746693.png" alt="image-20230305154746693" tabindex="0" loading="lazy"><figcaption>image-20230305154746693</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154840872.png" alt="image-20230305154840872" tabindex="0" loading="lazy"><figcaption>image-20230305154840872</figcaption></figure><h3 id="指令格式优化" tabindex="-1"><a class="header-anchor" href="#指令格式优化"><span>指令格式优化</span></a></h3><blockquote><p>1204、2104、2204、2210</p></blockquote><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230319154548356.png" alt="image-20230319154548356" tabindex="0" loading="lazy"><figcaption>image-20230319154548356</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230319154445488.png" alt="image-20230319154445488" tabindex="0" loading="lazy"><figcaption>image-20230319154445488</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230319154651965.png" alt="image-20230319154651965" tabindex="0" loading="lazy"><figcaption>image-20230319154651965</figcaption></figure><h1 id="_1、数据表示" tabindex="-1"><a class="header-anchor" href="#_1、数据表示"><span>1、数据表示 ^ *</span></a></h1><blockquote><p>简简述<strong>标志符数据表示</strong>的<strong>概念</strong>和标志符数据表示<strong>存在的两个问题</strong> <strong>2210</strong></p><p>简简述<strong>数据描述符</strong>和<strong>标志符</strong>的差别 <strong>1510</strong> <strong>1710</strong> <strong>2110</strong></p><p>简简述<strong>标志符数据表示</strong>的<strong>主要优点</strong> <strong>1610</strong></p><p>简简述<strong>引入数据表示的原则</strong> <strong>1604</strong></p><p>简简述<strong>数据表示</strong>和<strong>数据结构</strong>之间的关系及引入高级数据表示的基本原则 <strong>1404</strong></p></blockquote><p><strong>数据表示</strong>：能由计算机硬件<strong>识别</strong>和<strong>引用</strong>的数据类型。它里头有可对数据进行操作的<strong>指令</strong>和<strong>运算部件</strong>。计算机的<strong>运算类指令</strong>和<strong>运算器结构</strong>主要是按计算机有什么样的<strong>数据表示</strong>来确定的。 <strong>^</strong></p><p><strong>数据结构</strong>：串、队、栈、向量、阵列、链表、树、图等由软件处理的数据结构，反映应用中要用到的各种数据元素或信息单元之间的结构关系。 ·</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230207215722811.png" alt="image-20230207215722811" tabindex="0" loading="lazy"><figcaption>image-20230207215722811</figcaption></figure><h2 id="高级数据表示" tabindex="-1"><a class="header-anchor" href="#高级数据表示"><span>高级数据表示</span></a></h2><ol><li>标志符数据表示 *</li><li>数据描述符 *</li><li>向量、数组数据表示</li><li>堆栈数据表示</li></ol><h3 id="标志符数据表示" tabindex="-1"><a class="header-anchor" href="#标志符数据表示"><span>标志符数据表示 ^ *</span></a></h3><p>标志符数据表示：将数据类型和数据放在一起。</p><blockquote><p>图标志符数据表示的表示形式</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_9708.jpeg" alt="IMG_9708" tabindex="0" loading="lazy"><figcaption>IMG_9708</figcaption></figure></blockquote><p>标志符数据表示的<strong>主要优点</strong>：</p><ol><li><strong>简化</strong>指令系统、程序设计以及编译程序；</li><li>由<strong>硬件</strong>实现<strong>一致性检查</strong>和<strong>数据类型</strong>转换；</li><li>便于<strong>软件</strong>调试且支持数据库系统。</li></ol><p>标志符数据表示可能带来<strong>两个问题</strong>：</p><ol><li>增加程序占用的主存空间。</li><li>降低指令的执行速度。</li></ol><h3 id="数据描述符" tabindex="-1"><a class="header-anchor" href="#数据描述符"><span>数据描述符</span></a></h3><p>为进一步减少标志符所占用的存储空间，对向量、数据、记录等数据，采用<strong>数据描述符</strong>，因为他们的<strong>元素属性相同</strong>。</p><blockquote><p>图数据描述符的表示形式</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230207220205894.png" alt="image-20230207220205894" tabindex="0" loading="lazy"><figcaption>image-20230207220205894</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230207220445277.png" alt="image-20230207220445277" tabindex="0" loading="lazy"><figcaption>image-20230207220445277</figcaption></figure></blockquote><h3 id="标志符与数据描述符的区别" tabindex="-1"><a class="header-anchor" href="#标志符与数据描述符的区别"><span>标志符与数据描述符的区别 ^*</span></a></h3><p>标志符只作用于<strong>一个</strong>数据，而数据描述符作用于<strong>一组</strong>数据。</p><p>标志符与数据存放在一起，而描述符与数据分开存放。</p><h3 id="向量、数组数据表示-·" tabindex="-1"><a class="header-anchor" href="#向量、数组数据表示-·"><span>向量、数组数据表示 ·</span></a></h3><p>为向量、数组数据结构的实现和快速运算提供更好的硬件支持的方法是增设向量数据表示，组成向量机，如 CRAY-1。有向量数据表示的处理机就是向量处理机，如向量流水机、阵列机、相联处理机。</p><blockquote><p>图</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230207221205738.png" alt="image-20230207221205738" tabindex="0" loading="lazy"><figcaption>image-20230207221205738</figcaption></figure></blockquote><h3 id="堆栈数据表示" tabindex="-1"><a class="header-anchor" href="#堆栈数据表示"><span>堆栈数据表示 ^ *</span></a></h3><p>堆栈数据结构在<strong>编译</strong>和<strong>子程序调用</strong>中很有用，为高效实现，很多机器都设置有堆栈数据表示。有堆栈数据表示的计算机称为<strong>堆栈计算机</strong>。</p><p>通用寄存器型机器对堆栈数据结构实现的支持较差，所以出现了<strong>堆栈计算机</strong>，其<strong>特点</strong>：</p><ol><li>由高速寄存器组成的硬件堆栈。</li><li>有丰富的堆栈操作指令，功能强大。</li><li>支持高级语言编译、子程序的嵌套和递归调用。</li></ol><h2 id="数据表示的引入原则" tabindex="-1"><a class="header-anchor" href="#数据表示的引入原则"><span>数据表示的引入原则 * ^</span></a></h2><ol><li>看系统的<strong>效率</strong>是否显著提高，包括<strong>实现时间</strong>和<strong>存储空间</strong>是否显著减少。</li><li>看引入这种数据表示后，其<strong>通用性</strong>和<strong>利用率</strong>是否提高。</li></ol><h1 id="_2、浮点数" tabindex="-1"><a class="header-anchor" href="#_2、浮点数"><span>2、浮点数 ** *</span></a></h1><ul><li>📚 🇺🇸 兰德尔E.布莱恩特 深入理解计算机系统（第3版）ch2</li><li>📚 🇺🇸 贝赫鲁兹·佛罗赞 计算机科学导论（第4版） ch3</li><li>📚 🇺🇸 内尔·戴尔 计算机科学概论（第7版） ch3</li><li>📚 🇨🇳 李学干 计算机系统机构（12版） ch2</li></ul><h2 id="表示方式" tabindex="-1"><a class="header-anchor" href="#表示方式"><span>表示方式</span></a></h2><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_8AA2772363DC-1 3.jpeg" alt="IMG_8AA2772363DC-1 3" tabindex="0" loading="lazy"><figcaption>IMG_8AA2772363DC-1 3</figcaption></figure>',72),r=s("ul",null,[s("li",null,[n("尾数：数制（小数或整数）和码制（原码或补码） "),s("ul",null,[s("li",null,[s("strong",null,[n("尾数基值("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"r"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"r_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n(")")]),n("：2、4、、8、16和10进制。")]),s("li",null,[s("strong",null,[n("尾数位数("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"m")]),s("annotation",{encoding:"application/x-tex"},"m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"m")])])]),n(")：决定可表示数的精度")])])])]),s("li",null,[n("阶码（"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mi",null,"p")])]),s("annotation",{encoding:"application/x-tex"},"2^p")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6644em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"p")])])])])])])])])])]),n("）：整数，移码（偏码、增码、余码）或补码。 "),s("ul",null,[s("li",null,"阶码基值：通常为2进制。"),s("li",null,[s("strong",null,[n("阶值位数("),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"p")]),s("annotation",{encoding:"application/x-tex"},"p")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"p")])])]),n(")：决定可表示数的范围")])])])])],-1),m=a('<p>结论：尾数决定了浮点数的表示精度，阶值决定了浮点数的表示范围。 <strong><u>简记：尾数决定精度，阶值决定范围</u></strong></p><blockquote><p><b style="color:red;">什么是规格化正尾数？</b></p><p>正尾数小数点后的第<strong>1</strong>个r<sub>m</sub>进制数位不是<strong>0</strong>的数。 <strong>^</strong></p></blockquote><h2 id="计算公式-x3" tabindex="-1"><a class="header-anchor" href="#计算公式-x3"><span>计算公式** ** ^ x3</span></a></h2>',3),o=s("p",null,[s("strong",null,"规律"),n("：一般地，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"r"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"r_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n("都是2的整次幂，因此 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msubsup",null,[s("mi",null,"r"),s("mi",null,"m"),s("msup",null,[s("mi",null,"m"),s("mo",{mathvariant:"normal",lspace:"0em",rspace:"0em"},"′")])]),s("mo",null,"="),s("msup",null,[s("mn",null,"2"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"r_m^{m^{\\prime}}=2^m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1895em","vertical-align":"-0.247em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9425em"}},[s("span",{style:{top:"-2.453em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])]),s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"m"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8278em"}},[s("span",{style:{top:"-2.931em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"′")])])])])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.247em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6644em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])])])])])])])])])],-1),p=s("p",null,"计算尾数最值及个数、阶的最值及个数、可表示数的最值及个数。",-1),h=s("figure",null,[s("img",{src:"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230319144645762.png",alt:"image-20230319144645762",tabindex:"0",loading:"lazy"}),s("figcaption",null,"image-20230319144645762")],-1),c=s("figure",null,[s("img",{src:"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/006y8mN6gy1h6ubkvwnl2j31000px0w4.jpg",alt:"浮点数计算",tabindex:"0",loading:"lazy"}),s("figcaption",null,"浮点数计算")],-1),d=s("h2",{id:"浮点数尾数基值大小分析-讨论-取值",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#浮点数尾数基值大小分析-讨论-取值"},[s("span",null,[n("浮点数尾数基值大小分析（讨论 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"r"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"r_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n(" 取值）[**^]")])])],-1),u=s("p",null,"尾数基值增大，会扩大浮点数表示范围，增加可表示数的个数，减少移位次数，降低右移造成的精度损失，提高运算速度，但也会降低数据的表示精度，数值的分布变稀疏。",-1),v=s("ul",null,[s("li",null,[s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"r"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"r_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n(" ↑ ，可表示数的范围 ↑")])]),s("li",null,[s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"r"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"r_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n(" ↑ ，可表示数的个数 ↑")])]),s("li",null,[s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"r"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"r_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n(" ↑ ，运算速度 ↑")])]),s("li",null,[s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"r"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"r_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n(" ↑ ，数在数轴上的（密度）分布 ↓")])]),s("li",null,[s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"r"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"r_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n(" ↑ ，可表示数的精度 ↓")])]),s("li",null,[s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"r"),s("mi",null,"m")])]),s("annotation",{encoding:"application/x-tex"},"r_m")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0278em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),n(" ↑ ，精度损失 ↓")])])],-1),x=a('<p>因此，可<u><strong>简记：尾基与范个速成正相关，与密精损成负相关</strong></u>。 <strong>^</strong></p><blockquote><p>选浮点数尾数基值大小分析</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154137350.png" alt="image-20230305154137350" tabindex="0" loading="lazy"><figcaption>image-20230305154137350</figcaption></figure></blockquote><h2 id="尾数下溢处理方法" tabindex="-1"><a class="header-anchor" href="#尾数下溢处理方法"><span>尾数下溢处理方法 * **</span></a></h2><p>处理办法：<strong><u>简记：截舍恒查</u></strong></p><ul><li><strong>截断法</strong>。<strong>实现最简单</strong>。<strong>平均误差最大</strong>。</li><li>舍入法。最大误差小，平均误差趋于0。</li><li><strong>恒置1法</strong>。<strong>最大误差最大，平均误差趋于0，下溢处理不耗时</strong>。</li><li><strong>查表舍入法</strong>。<strong>实现最复杂</strong></li></ul><blockquote><p>2210：平均误差最大的是？截断法。</p><p>1204#5A：实现最简单：截断法。</p><p>1404#3D：最大误差最大，平均误差趋于0，下溢处理不耗时：恒置1法。</p></blockquote><h3 id="查表舍入法" tabindex="-1"><a class="header-anchor" href="#查表舍入法"><span>查表舍入法 *</span></a></h3><p>用<strong>ROM</strong>或PLA存放下溢处理表。</p><p>查表舍入法的优缺点：</p><ul><li>优点：速度快，平均误差可调节到0；</li><li>缺点：硬件量大</li></ul><p><strong>查表舍入法填下溢处理表的规则，直接以真题为例</strong> <strong>^</strong></p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154700715.png" alt="image-20230305154700715" tabindex="0" loading="lazy"><figcaption>image-20230305154700715</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230306212427696.png" alt="image-20230306212427696" tabindex="0" loading="lazy"><figcaption>image-20230306212427696</figcaption></figure><h1 id="_3、寻址技术" tabindex="-1"><a class="header-anchor" href="#_3、寻址技术"><span>3、寻址技术</span></a></h1><ol><li>编址方式 ·</li><li>寻址方式 *</li><li>定位方式 *</li></ol><h2 id="编址方式" tabindex="-1"><a class="header-anchor" href="#编址方式"><span>编址方式</span></a></h2><h2 id="寻址方式" tabindex="-1"><a class="header-anchor" href="#寻址方式"><span>寻址方式^</span></a></h2><p>寻址方式：指令寻找<strong>操作数或信息</strong>的方式。</p><blockquote><p>寻址方式的三种面向</p></blockquote><p>面向<strong>主存</strong>、<strong>寄存器</strong>、<strong>堆栈</strong>三种寻址方式。 <u><strong>简记：主寄堆</strong></u></p><h2 id="程序在主存中的定位技术" tabindex="-1"><a class="header-anchor" href="#程序在主存中的定位技术"><span>程序在主存中的定位技术</span></a></h2><blockquote><p>简简述程序的静态再定位和动态再定位的含义及实现方法 <strong>1204</strong></p></blockquote><ul><li><strong>静态再定位</strong>：程序执行时物理地址不改变。实现方法：在程序装入主存时，由<strong>装入程序</strong>用<strong>软件</strong>方法把程序的<strong>逻辑地址</strong>变换成<strong>物理地址</strong>。</li><li><strong>动态再定位</strong>：在执行每条指令时才形成访存物理地址。实现方法：程序执行时，通过<strong>地址加法器</strong>将<strong>逻辑地址</strong>和<strong>程序基址</strong>相加后形成访存物理地址。</li><li><strong>虚拟地址映像表</strong>。存储体系采用该技术实现定位程序在主存中的位置。</li></ul><p>首先，弄清逻辑地址和主存物理地址：逻辑地址：程序员编程用的地址；主存物理地址：程序在主存中的实际地址；这两个术语适用于整个计算机体系。</p><h1 id="_4、指令系统" tabindex="-1"><a class="header-anchor" href="#_4、指令系统"><span>4、指令系统*^</span></a></h1><h2 id="指令系统的组成" tabindex="-1"><a class="header-anchor" href="#指令系统的组成"><span>指令系统的组成</span></a></h2><blockquote><p>图指令系统的组成</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/e6c9d24ely1h4ttg01eljj20sc04uaap.jpg" alt="image-20220803194605016" tabindex="0" loading="lazy"><figcaption>image-20220803194605016</figcaption></figure><p>操作码由两部分组成：-</p><ul><li>操作种类：加减乘除、移位、转移、输入输出等</li><li>操作数描述：定点数、浮点数等</li></ul><p>地址码由三部分组成：-</p><ul><li>地址：地址码、立即数、寄存器、变址寄存器。</li><li>地址的附加信息：偏移量、块长度、跳距。</li><li>寻址方式：直接寻址、间接寻址、变址寻址等</li></ul></blockquote><h2 id="指令系统的设计" tabindex="-1"><a class="header-anchor" href="#指令系统的设计"><span>指令系统的设计</span></a></h2><p>指令系统的设计包括指令<strong>功能</strong>和指令<strong>格式</strong>的设计。 <strong>^</strong></p><p>编译程序设计者要求指令系统应具有的特性： <strong><u>简记：规整与对称、独立与全能、可扩与可组、还有正交性</u></strong>。</p><ul><li>规整性。对相似操作做相同规定。</li><li>对称性。<strong>对称性操作</strong>的<strong>定义相同</strong>，便于<strong>编译</strong>。</li><li>独立性与全能性。有多种程序选择实现同一种功能，应限定只能有一种选择方式。</li><li>可扩充性。要留有一定数量的<strong>冗余操作码</strong>，以便<strong>新指令的扩充</strong>。</li><li>可组合性。所有操作对各种<strong>寻址方式</strong>和<strong>数据类型</strong>都适应。</li><li>正交性。指令中各个<strong>不同含义的字段</strong>，在<strong>编码</strong>时<strong>互不相关，相互独立</strong>。</li></ul><h2 id="指令系统的优化" tabindex="-1"><a class="header-anchor" href="#指令系统的优化"><span>指令系统的优化*</span></a></h2><ul><li>指令操作码的优化，比如有哈夫曼编码、扩展码。</li><li>指令字格式的优化。</li></ul><p>👉🏻 <a href="https://www.bilibili.com/video/BV11Z4y1p7uU?p=15" target="_blank" rel="noopener noreferrer">指令格式优化</a></p><h3 id="指令操作码的3种优化" tabindex="-1"><a class="header-anchor" href="#指令操作码的3种优化"><span>指令操作码的3种优化</span></a></h3><ol><li>固定长度</li><li>哈夫曼（Huffman）编码 *</li><li>扩展编码</li></ol><p>优化操作码编码的目的：<strong>节省程序存储空间</strong>。</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/e6c9d24egy1h4y5hqgpm0j20ue0aa0uh.jpg" alt="image-20220807134512309" tabindex="0" loading="lazy"><figcaption>image-20220807134512309</figcaption></figure><h4 id="固定长度编码" tabindex="-1"><a class="header-anchor" href="#固定长度编码"><span>固定长度编码</span></a></h4><p>码长公式：</p>',40),z=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",{fence:"true"},"⌈"),s("msub",null,[s("mrow",null,[s("mi",null,"log"),s("mo",null,"⁡")]),s("mn",null,"2")]),s("mi",null,"n"),s("mo",{fence:"true"},"⌉")]),s("annotation",{encoding:"application/x-tex"}," \\left\\lceil\\log _2 n\\right\\rceil ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"⌈"),s("span",{class:"mop"},[s("span",{class:"mop"},[n("lo"),s("span",{style:{"margin-right":"0.01389em"}},"g")]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.207em"}},[s("span",{style:{top:"-2.4559em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2441em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose delimcenter",style:{top:"0em"}},"⌉")])])])])])],-1),f=a('<h4 id="huffman编码" tabindex="-1"><a class="header-anchor" href="#huffman编码"><span>Huffman编码</span></a></h4><p>哈夫曼压缩概念：当各种事件发生的<strong>概率不均等</strong>时，采用优化技术，对发生<strong>概率最高</strong>的事件用<strong>最短的位数</strong>（时间）来表示（处理），而对出现<strong>概率较低</strong>的事 件允许使用<strong>较长的位数</strong>（时间）来表示（处理），使表示（处理）的平均位数（时间）缩短。</p><p><b style="color:red;">如何构造哈夫曼树？</b></p><p>需要学会构造哈夫曼树，利用哈夫曼树进行操作码编码，如何构造哈夫曼树？可以参考《数据结构》笔记。</p><p><strong>构造哈夫曼树口诀：</strong></p><ol><li>构造森林全是根</li><li>选用两小造新树</li><li>删除两小添新人</li><li>重复2、3剩单根</li></ol><p>哈夫曼编码的相关公式：</p>',7),y=s("ul",null,[s("li",null,[n("操作码平均码长的公式 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"H"),s("mo",null,"="),s("mi",null,"l"),s("mi",null,"o"),s("msub",null,[s("mi",null,"g"),s("mn",null,"2")]),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"H=log_2n")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0359em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mord mathnormal"},"n")])])])]),s("li",null,[n("操作码最短平均长度的公式 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"H"),s("mtext",null," "),s("mi",null,"o"),s("mi",null,"p"),s("mi",null,"t"),s("mtext",null," ")]),s("annotation",{encoding:"application/x-tex"},"H~opt~")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mord mathnormal"},"o"),s("span",{class:"mord mathnormal"},"pt"),s("span",{class:"mspace nobreak"}," ")])])])]),s("li",null,[n("信息冗余量的公式 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"R")]),s("annotation",{encoding:"application/x-tex"},"R")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R")])])])])],-1),b=s("p",null,"以下面例题展示公式的具体应用：",-1),k=s("p",null,[s("strong",null,"重点关注："),n(" 使用频度（"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"p"),s("mtext",null," "),s("mi",null,"i"),s("mtext",null," ")]),s("annotation",{encoding:"application/x-tex"},"p~i~")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.854em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mspace nobreak"}," ")])])]),n("）和 OP长度（"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"l"),s("mtext",null," "),s("mi",null,"i"),s("mtext",null," ")]),s("annotation",{encoding:"application/x-tex"},"l~i~")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mspace nobreak"}," "),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mspace nobreak"}," ")])])]),n("）")],-1),w=a('<figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/e6c9d24ely1h4sp37u09hj20w40k0q8a.jpg" alt="image-20220413225838893" tabindex="0" loading="lazy"><figcaption>image-20220413225838893</figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/e6c9d24ely1h4sp36ttzmj20v60d4n07.jpg" alt="image-20220413225920978" tabindex="0" loading="lazy"><figcaption>image-20220413225920978</figcaption></figure><h4 id="扩展编码" tabindex="-1"><a class="header-anchor" href="#扩展编码"><span>扩展编码</span></a></h4><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/008vxvgGly1h72ewugi0tj31cs0eo7an.jpg" alt="image-20221012125359565" tabindex="0" loading="lazy"><figcaption>image-20221012125359565</figcaption></figure><p>扩展编码的思想：界于<strong>定长二进制编码</strong>和<strong>完全哈夫曼编码</strong>之间的一种编码方式，操作码的长度不是定长的，但是只有有限几种码长。仍然采用<strong>高概率指令用短码</strong>、<strong>低概率指令用长码</strong>的哈夫曼编码思想。该思想是为了解决解决哈夫曼编码造成的“编码种类多导致不便译码”的问题。</p><p><b style="color:red;">扩展编码法具体是怎么个扩展的？依据是什么？</b></p><h3 id="指令格式的优化措施" tabindex="-1"><a class="header-anchor" href="#指令格式的优化措施"><span>指令格式的优化措施 **</span></a></h3><p>从指令的组成和设计谈优化：</p><ul><li>∵ 指令=操作码+地址码</li><li>∴ 从<strong>缩短码长</strong>的角度，可以用<strong>扩展码</strong>优化<strong>操作码</strong>；用<strong>多种寻址方式</strong>优化<strong>地址码</strong>。</li><li>∴ 从<strong>增强功能</strong>的角度，可以用<strong>多种地址制、地址形式以及指令字长度</strong>等方式增强指令功能。</li></ul><h2 id="指令系统的改进" tabindex="-1"><a class="header-anchor" href="#指令系统的改进"><span>指令系统的改进</span></a></h2><ul><li>面向 CISC</li><li>面向 RISC*</li></ul><h3 id="cisc-复杂指令系统" tabindex="-1"><a class="header-anchor" href="#cisc-复杂指令系统"><span>CISC 复杂指令系统</span></a></h3><h3 id="问题所在" tabindex="-1"><a class="header-anchor" href="#问题所在"><span>问题所在</span></a></h3><ol><li>指令<strong>系统庞大、 操作繁杂</strong></li><li>指令<strong>执行速度低、使用频度低</strong></li></ol><h3 id="优化途径" tabindex="-1"><a class="header-anchor" href="#优化途径"><span>优化途径^*</span></a></h3><p><strong><u>简记：操高目</u></strong></p><ul><li>面向<strong>目标程序</strong></li><li>面向<strong>高级语言</strong></li><li>面向<strong>操作系统</strong></li></ul><p><strong>面向目标程序的优化实现改进</strong></p><ol><li>增强<strong>使用频度高</strong>的指令</li><li>增强<strong>运算型</strong>、<strong>传输型</strong>、<strong>程序控制型</strong>指令的功能</li></ol><p><strong>面向高级语言的优化实现改进</strong></p><ol><li>根据高级语言语句的使用频率进行优化改进</li><li>面向编译，优化代码生成</li><li>改进指令系统，缩小语义差异</li><li>采用面向问题动态自寻优的系统结构</li><li>发展高级语言机器</li></ol><table><thead><tr><th><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/e6c9d24ely1h4sp379q2gj20sg0lc3zr.jpg" alt="系统结构各机器间的语义差异" loading="lazy"></th><th><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/e6c9d24ely1h4sp34jiusj20sg0lcab9.jpg" alt="系统结构语言与指令系统的语义差异" loading="lazy"></th></tr></thead></table><p><strong>面向操作系统的优化实现改进</strong></p><h3 id="risc-精简指令系统" tabindex="-1"><a class="header-anchor" href="#risc-精简指令系统"><span>RISC 精简指令系统</span></a></h3><h3 id="risc-设计原则" tabindex="-1"><a class="header-anchor" href="#risc-设计原则"><span>RISC 设计原则</span></a></h3><ol><li>选择使用频率高的指令，</li><li>让所有指令在一个<strong>机器周期</strong>内完成。</li><li>减少指令系统的<strong>寻址方式</strong></li><li>精简指令、优化编译程序。</li><li>扩大<strong>通用寄存器</strong>的数量。</li><li>多数指令使用<strong>硬联控制</strong>实现。</li></ol><h3 id="risc基本技术" tabindex="-1"><a class="header-anchor" href="#risc基本技术"><span>RISC基本技术 * **</span></a></h3><ol><li>按照<strong>RISC设计原则</strong>设计</li><li><strong>逻辑实现</strong>采用<strong>硬联与微程序相结合</strong></li><li>在<strong>CPU</strong>中设置<strong>工作寄存器</strong>并采用<strong>重叠寄存器窗口</strong>。</li><li><strong>指令</strong>采用<strong>流水</strong>和<strong>延迟转移</strong></li><li><strong>指令</strong>和<strong>数据</strong>存放在<strong>Cache</strong>中</li><li>优化<strong>编译程序</strong>设计</li></ol><blockquote><p><strong>延迟转移技术</strong> ** （借助慕课巩固下认知）</p></blockquote><p>为了使指令流水线<strong>不断流</strong>，在<strong>转移指令之后</strong>插入一条<strong>没有数据相关和控制相关的有效指令</strong>，使转移指令被延迟执行。</p><blockquote><p><strong>重叠寄存器窗口技术</strong>：</p></blockquote><p>在 RISC 中，因为子程序比 CISC 多，所以<strong>传送参数</strong>会大量地访问存储器信息。这时可通过<strong>重叠寄存器窗口技术</strong>来<strong>减少访存频率，提高系统效率</strong>，具体做法：每个过程都有寄存器窗口，各个过程的寄存器窗口<strong>部分重叠</strong>。</p><figure><img src="https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230211125237456.png" alt="image-20230211125237456" tabindex="0" loading="lazy"><figcaption>image-20230211125237456</figcaption></figure><h3 id="risc优缺点" tabindex="-1"><a class="header-anchor" href="#risc优缺点"><span>RISC优缺点</span></a></h3><ul><li>优点：设计简单、速度快、成本低、 <ul><li>简化<strong>指令系统和编译程序</strong>的设计。</li><li>提高<strong>系统</strong>的<strong>执行速度</strong>和<strong>可靠性</strong>。</li><li>降低设计<strong>成本</strong>，支持<strong>高级语言</strong>实现。</li></ul></li><li>缺点：编程复杂度高 <ul><li>加重<strong>汇编语言程序设计</strong>的负担。</li><li>对<strong>浮点运算</strong>和<strong>虚拟存储器</strong>的支持还不够。</li></ul></li></ul>',35),B=[g,r,m,o,p,h,c,d,u,v,x,z,f,y,b,k,w];function j(_,M){return l(),e("div",null,B)}const C=t(i,[["render",j],["__file"," 2 数据表示、寻址方式、指令系统.html.vue"]]),q=JSON.parse('{"path":"/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/%202%20%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A4%BA%E3%80%81%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F%E3%80%81%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F.html","title":"数据表示、寻址方式、指令系统","lang":"zh-CN","frontmatter":{"title":"数据表示、寻址方式、指令系统","order":2,"icon":"file","category":["系统结构","理论基础"],"description":"数据表示、寻址方式、指令系统 本章涉及的公式有 浮点计算公式 ROM 查表舍入法 指令格式优化（固、哈、扩）码长公式 真题 简答题（15） ^ 【数据表示篇】 简述标志符数据表示的概念和标志符数据表示存在的两个问题 2210 简述数据描述符和标志符的差别 1510 1710 2110 简述标志符数据表示的优点 1610 简述引入数据表示的原则 1604...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/yibu_zzn/%E7%B3%BB%E7%BB%9F%E7%BB%93%E6%9E%84/%202%20%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A4%BA%E3%80%81%E5%AF%BB%E5%9D%80%E6%96%B9%E5%BC%8F%E3%80%81%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F.html"}],["meta",{"property":"og:site_name","content":"郑振宁的数字资产中心"}],["meta",{"property":"og:title","content":"数据表示、寻址方式、指令系统"}],["meta",{"property":"og:description","content":"数据表示、寻址方式、指令系统 本章涉及的公式有 浮点计算公式 ROM 查表舍入法 指令格式优化（固、哈、扩）码长公式 真题 简答题（15） ^ 【数据表示篇】 简述标志符数据表示的概念和标志符数据表示存在的两个问题 2210 简述数据描述符和标志符的差别 1510 1710 2110 简述标志符数据表示的优点 1610 简述引入数据表示的原则 1604..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154700715.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-12T02:36:39.000Z"}],["meta",{"property":"article:author","content":"郑振宁"}],["meta",{"property":"article:modified_time","content":"2024-04-12T02:36:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据表示、寻址方式、指令系统\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154700715.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230306212427696.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154420434.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154540621.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230402154912066.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154728498.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154746693.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154840872.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230319154548356.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230319154445488.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230319154651965.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230207215722811.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_9708.jpeg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230207220205894.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230207220445277.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230207221205738.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/IMG_8AA2772363DC-1%203.jpeg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230319144645762.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/006y8mN6gy1h6ubkvwnl2j31000px0w4.jpg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154137350.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230305154700715.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230306212427696.png\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/e6c9d24ely1h4ttg01eljj20sc04uaap.jpg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/e6c9d24egy1h4y5hqgpm0j20ue0aa0uh.jpg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/e6c9d24ely1h4sp37u09hj20w40k0q8a.jpg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/e6c9d24ely1h4sp36ttzmj20v60d4n07.jpg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/008vxvgGly1h72ewugi0tj31cs0eo7an.jpg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/e6c9d24ely1h4sp379q2gj20sg0lc3zr.jpg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/e6c9d24ely1h4sp34jiusj20sg0lcab9.jpg\\",\\"https://cdn.jsdelivr.net/gh/zhengzhenning/imageBeds@main/images/image-20230211125237456.png\\"],\\"dateModified\\":\\"2024-04-12T02:36:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"郑振宁\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"本章涉及的公式有","slug":"本章涉及的公式有","link":"#本章涉及的公式有","children":[]},{"level":2,"title":"简答题（15） ^","slug":"简答题-15","link":"#简答题-15","children":[]},{"level":2,"title":"应用题","slug":"应用题","link":"#应用题","children":[{"level":3,"title":"尾数下溢-ROM查表舍入法","slug":"尾数下溢-rom查表舍入法","link":"#尾数下溢-rom查表舍入法","children":[]},{"level":3,"title":"尾数计算 ** **","slug":"尾数计算","link":"#尾数计算","children":[]},{"level":3,"title":"指令格式优化","slug":"指令格式优化","link":"#指令格式优化","children":[]}]},{"level":2,"title":"高级数据表示","slug":"高级数据表示","link":"#高级数据表示","children":[{"level":3,"title":"标志符数据表示 ^ *","slug":"标志符数据表示","link":"#标志符数据表示","children":[]},{"level":3,"title":"数据描述符","slug":"数据描述符","link":"#数据描述符","children":[]},{"level":3,"title":"标志符与数据描述符的区别 ^*","slug":"标志符与数据描述符的区别","link":"#标志符与数据描述符的区别","children":[]},{"level":3,"title":"向量、数组数据表示 ·","slug":"向量、数组数据表示-·","link":"#向量、数组数据表示-·","children":[]},{"level":3,"title":"堆栈数据表示 ^ *","slug":"堆栈数据表示","link":"#堆栈数据表示","children":[]}]},{"level":2,"title":"数据表示的引入原则 * ^","slug":"数据表示的引入原则","link":"#数据表示的引入原则","children":[]},{"level":2,"title":"表示方式","slug":"表示方式","link":"#表示方式","children":[]},{"level":2,"title":"计算公式** ** ^ x3","slug":"计算公式-x3","link":"#计算公式-x3","children":[]},{"level":2,"title":"浮点数尾数基值大小分析（讨论  取值）[**^]","slug":"浮点数尾数基值大小分析-讨论-取值","link":"#浮点数尾数基值大小分析-讨论-取值","children":[]},{"level":2,"title":"尾数下溢处理方法 * **","slug":"尾数下溢处理方法","link":"#尾数下溢处理方法","children":[{"level":3,"title":"查表舍入法 *","slug":"查表舍入法","link":"#查表舍入法","children":[]}]},{"level":2,"title":"编址方式","slug":"编址方式","link":"#编址方式","children":[]},{"level":2,"title":"寻址方式^","slug":"寻址方式","link":"#寻址方式","children":[]},{"level":2,"title":"程序在主存中的定位技术","slug":"程序在主存中的定位技术","link":"#程序在主存中的定位技术","children":[]},{"level":2,"title":"指令系统的组成","slug":"指令系统的组成","link":"#指令系统的组成","children":[]},{"level":2,"title":"指令系统的设计","slug":"指令系统的设计","link":"#指令系统的设计","children":[]},{"level":2,"title":"指令系统的优化*","slug":"指令系统的优化","link":"#指令系统的优化","children":[{"level":3,"title":"指令操作码的3种优化","slug":"指令操作码的3种优化","link":"#指令操作码的3种优化","children":[]},{"level":3,"title":"指令格式的优化措施 **","slug":"指令格式的优化措施","link":"#指令格式的优化措施","children":[]}]},{"level":2,"title":"指令系统的改进","slug":"指令系统的改进","link":"#指令系统的改进","children":[{"level":3,"title":"CISC 复杂指令系统","slug":"cisc-复杂指令系统","link":"#cisc-复杂指令系统","children":[]},{"level":3,"title":"问题所在","slug":"问题所在","link":"#问题所在","children":[]},{"level":3,"title":"优化途径^*","slug":"优化途径","link":"#优化途径","children":[]},{"level":3,"title":"RISC  精简指令系统","slug":"risc-精简指令系统","link":"#risc-精简指令系统","children":[]},{"level":3,"title":"RISC 设计原则","slug":"risc-设计原则","link":"#risc-设计原则","children":[]},{"level":3,"title":"RISC基本技术 * **","slug":"risc基本技术","link":"#risc基本技术","children":[]},{"level":3,"title":"RISC优缺点","slug":"risc优缺点","link":"#risc优缺点","children":[]}]}],"git":{"createdTime":1712889399000,"updatedTime":1712889399000,"contributors":[{"name":"一步","email":"zzn_workmail@163.com","commits":1}]},"readingTime":{"minutes":13.12,"words":3937},"filePathRelative":"系统结构/ 2 数据表示、寻址方式、指令系统.md","localizedDate":"2024年4月12日","excerpt":"\\n<h2>本章涉及的公式有</h2>\\n<ol>\\n<li>浮点计算公式</li>\\n<li>ROM 查表舍入法</li>\\n<li>指令格式优化（固、哈、扩）码长公式</li>\\n</ol>\\n<h1>真题</h1>\\n<h2>简答题（15） ^</h2>\\n<p>【数据表示篇】</p>\\n<p>简述标志符数据表示的概念和标志符数据表示存在的两个问题 <strong>2210</strong></p>\\n<p>简述数据描述符和标志符的差别 <strong>1510</strong> <strong>1710</strong> <strong>2110</strong></p>\\n<p>简述标志符数据表示的优点 <strong>1610</strong></p>","autoDesc":true}');export{C as comp,q as data};
